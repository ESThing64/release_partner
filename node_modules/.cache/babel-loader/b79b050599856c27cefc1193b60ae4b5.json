{"ast":null,"code":"import _toConsumableArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import services from'utils/mockAdapter';// third-party\nimport{Chance}from'chance';import{v4 as UIDV4}from'uuid';var chance=new Chance();// billing address list\nvar address=[{id:1,name:chance.name(),destination:'home',building:chance.address({short_suffix:true}),street:chance.address({short_suffix:false}),city:chance.city(),state:chance.state({full:true}),country:chance.country({full:true}),post:chance.postcode(),phone:chance.phone(),isDefault:true},{id:2,name:chance.name(),destination:'office',building:chance.address({short_suffix:true}),street:chance.address({short_suffix:false}),city:chance.city(),state:chance.state({full:true}),country:chance.country({full:true}),post:chance.postcode(),phone:chance.phone(),isDefault:false}];// ==============================|| MOCK SERVICES ||============================== //\nservices.onGet('/api/address/list').reply(200,{address:address});services.onPost('/api/address/new').reply(function(request){try{var _JSON$parse=JSON.parse(request.data),data=_JSON$parse.data;var name=data.name,destination=data.destination,building=data.building,street=data.street,city=data.city,state=data.state,country=data.country,post=data.post,phone=data.phone,isDefault=data.isDefault;var newAddress={id:UIDV4(),name:name,destination:destination,building:building,street:street,city:city,state:state,country:country,post:post,phone:phone,isDefault:isDefault};if(isDefault){address=address.map(function(item){if(item.isDefault===true){return _objectSpread(_objectSpread({},item),{},{isDefault:false});}return item;});}address=[].concat(_toConsumableArray(address),[newAddress]);return[200,{address:address}];}catch(err){console.error(err);return[500,{message:'Internal server error'}];}});services.onPost('/api/address/edit').reply(function(request){try{var _JSON$parse2=JSON.parse(request.data),data=_JSON$parse2.data;if(data.isDefault){address=address.map(function(item){if(item.isDefault===true){return _objectSpread(_objectSpread({},item),{},{isDefault:false});}return item;});}address=address.map(function(item){if(item.id===data.id){return data;}return item;});return[200,{address:address}];}catch(err){console.error(err);return[500,{message:'Internal server error'}];}});","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/_mockApis/e-commerce/billing-address.js"],"names":["services","Chance","v4","UIDV4","chance","address","id","name","destination","building","short_suffix","street","city","state","full","country","post","postcode","phone","isDefault","onGet","reply","onPost","request","JSON","parse","data","newAddress","map","item","err","console","error","message"],"mappings":"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","sourcesContent":["import services from 'utils/mockAdapter';\r\n\r\n// third-party\r\nimport { Chance } from 'chance';\r\nimport { v4 as UIDV4 } from 'uuid';\r\n\r\nconst chance = new Chance();\r\n\r\n// billing address list\r\nlet address = [\r\n    {\r\n        id: 1,\r\n        name: chance.name(),\r\n        destination: 'home',\r\n        building: chance.address({ short_suffix: true }),\r\n        street: chance.address({ short_suffix: false }),\r\n        city: chance.city(),\r\n        state: chance.state({ full: true }),\r\n        country: chance.country({ full: true }),\r\n        post: chance.postcode(),\r\n        phone: chance.phone(),\r\n        isDefault: true\r\n    },\r\n    {\r\n        id: 2,\r\n        name: chance.name(),\r\n        destination: 'office',\r\n        building: chance.address({ short_suffix: true }),\r\n        street: chance.address({ short_suffix: false }),\r\n        city: chance.city(),\r\n        state: chance.state({ full: true }),\r\n        country: chance.country({ full: true }),\r\n        post: chance.postcode(),\r\n        phone: chance.phone(),\r\n        isDefault: false\r\n    }\r\n];\r\n\r\n// ==============================|| MOCK SERVICES ||============================== //\r\n\r\nservices.onGet('/api/address/list').reply(200, { address });\r\n\r\nservices.onPost('/api/address/new').reply((request) => {\r\n    try {\r\n        const { data } = JSON.parse(request.data);\r\n        const { name, destination, building, street, city, state, country, post, phone, isDefault } = data;\r\n        const newAddress = {\r\n            id: UIDV4(),\r\n            name,\r\n            destination,\r\n            building,\r\n            street,\r\n            city,\r\n            state,\r\n            country,\r\n            post,\r\n            phone,\r\n            isDefault\r\n        };\r\n\r\n        if (isDefault) {\r\n            address = address.map((item) => {\r\n                if (item.isDefault === true) {\r\n                    return { ...item, isDefault: false };\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n\r\n        address = [...address, newAddress];\r\n\r\n        return [200, { address }];\r\n    } catch (err) {\r\n        console.error(err);\r\n        return [500, { message: 'Internal server error' }];\r\n    }\r\n});\r\n\r\nservices.onPost('/api/address/edit').reply((request) => {\r\n    try {\r\n        const { data } = JSON.parse(request.data);\r\n\r\n        if (data.isDefault) {\r\n            address = address.map((item) => {\r\n                if (item.isDefault === true) {\r\n                    return { ...item, isDefault: false };\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n\r\n        address = address.map((item) => {\r\n            if (item.id === data.id) {\r\n                return data;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        return [200, { address }];\r\n    } catch (err) {\r\n        console.error(err);\r\n        return [500, { message: 'Internal server error' }];\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}