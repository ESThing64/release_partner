{"ast":null,"code":"import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"date\",\"view\",\"onClickNext\",\"onClickPrev\",\"onClickToday\",\"onChangeView\"];// material-ui\nimport{Button,ButtonGroup,Grid,IconButton,Stack,Tooltip,Typography}from'@mui/material';// third-party\nimport{format}from'date-fns';// assets\nimport{IconChevronLeft,IconChevronRight,IconLayoutGrid,IconTemplate,IconLayoutList,IconListNumbers}from'@tabler/icons';// constant\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var viewOptions=[{label:'Month',value:'dayGridMonth',icon:IconLayoutGrid},{label:'Week',value:'timeGridWeek',icon:IconTemplate},{label:'Day',value:'timeGridDay',icon:IconLayoutList},{label:'Agenda',value:'listWeek',icon:IconListNumbers}];// ==============================|| CALENDAR TOOLBAR ||============================== //\nvar Toolbar=function Toolbar(_ref){var date=_ref.date,view=_ref.view,onClickNext=_ref.onClickNext,onClickPrev=_ref.onClickPrev,onClickToday=_ref.onClickToday,onChangeView=_ref.onChangeView,others=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsxs(Grid,_objectSpread(_objectSpread({alignItems:\"center\",container:true,justifyContent:\"space-between\",spacing:3},others),{},{sx:{pb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:onClickToday,children:\"Today\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:3,children:[/*#__PURE__*/_jsx(IconButton,{onClick:onClickPrev,size:\"large\",children:/*#__PURE__*/_jsx(IconChevronLeft,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h3\",color:\"textPrimary\",children:format(date,'MMMM yyyy')}),/*#__PURE__*/_jsx(IconButton,{onClick:onClickNext,size:\"large\",children:/*#__PURE__*/_jsx(IconChevronRight,{})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(ButtonGroup,{variant:\"outlined\",\"aria-label\":\"outlined button group\",children:viewOptions.map(function(viewOption){var Icon=viewOption.icon;return/*#__PURE__*/_jsx(Tooltip,{title:viewOption.label,children:/*#__PURE__*/_jsx(Button,{disableElevation:true,variant:viewOption.value===view?'contained':'outlined',onClick:function onClick(){return onChangeView(viewOption.value);},children:/*#__PURE__*/_jsx(Icon,{stroke:\"2\",size:\"1.3rem\"})})},viewOption.value);})})})]}));};export default Toolbar;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/calendar/Toolbar.js"],"names":["Button","ButtonGroup","Grid","IconButton","Stack","Tooltip","Typography","format","IconChevronLeft","IconChevronRight","IconLayoutGrid","IconTemplate","IconLayoutList","IconListNumbers","viewOptions","label","value","icon","Toolbar","date","view","onClickNext","onClickPrev","onClickToday","onChangeView","others","pb","map","viewOption","Icon"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, ButtonGroup, Grid, IconButton, Stack, Tooltip, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport { format } from 'date-fns';\r\n\r\n// assets\r\nimport { IconChevronLeft, IconChevronRight, IconLayoutGrid, IconTemplate, IconLayoutList, IconListNumbers } from '@tabler/icons';\r\n\r\n// constant\r\nconst viewOptions = [\r\n    {\r\n        label: 'Month',\r\n        value: 'dayGridMonth',\r\n        icon: IconLayoutGrid\r\n    },\r\n    {\r\n        label: 'Week',\r\n        value: 'timeGridWeek',\r\n        icon: IconTemplate\r\n    },\r\n    {\r\n        label: 'Day',\r\n        value: 'timeGridDay',\r\n        icon: IconLayoutList\r\n    },\r\n    {\r\n        label: 'Agenda',\r\n        value: 'listWeek',\r\n        icon: IconListNumbers\r\n    }\r\n];\r\n\r\n// ==============================|| CALENDAR TOOLBAR ||============================== //\r\n\r\nconst Toolbar = ({ date, view, onClickNext, onClickPrev, onClickToday, onChangeView, ...others }) => (\r\n    <Grid alignItems=\"center\" container justifyContent=\"space-between\" spacing={3} {...others} sx={{ pb: 3 }}>\r\n        <Grid item>\r\n            <Button variant=\"outlined\" onClick={onClickToday}>\r\n                Today\r\n            </Button>\r\n        </Grid>\r\n        <Grid item>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={3}>\r\n                <IconButton onClick={onClickPrev} size=\"large\">\r\n                    <IconChevronLeft />\r\n                </IconButton>\r\n                <Typography variant=\"h3\" color=\"textPrimary\">\r\n                    {format(date, 'MMMM yyyy')}\r\n                </Typography>\r\n                <IconButton onClick={onClickNext} size=\"large\">\r\n                    <IconChevronRight />\r\n                </IconButton>\r\n            </Stack>\r\n        </Grid>\r\n        <Grid item>\r\n            <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\r\n                {viewOptions.map((viewOption) => {\r\n                    const Icon = viewOption.icon;\r\n                    return (\r\n                        <Tooltip title={viewOption.label} key={viewOption.value}>\r\n                            <Button\r\n                                disableElevation\r\n                                variant={viewOption.value === view ? 'contained' : 'outlined'}\r\n                                onClick={() => onChangeView(viewOption.value)}\r\n                            >\r\n                                <Icon stroke=\"2\" size=\"1.3rem\" />\r\n                            </Button>\r\n                        </Tooltip>\r\n                    );\r\n                })}\r\n            </ButtonGroup>\r\n        </Grid>\r\n    </Grid>\r\n);\r\n\r\nToolbar.propTypes = {\r\n    date: PropTypes.object,\r\n    view: PropTypes.string,\r\n    onClickNext: PropTypes.func,\r\n    onClickPrev: PropTypes.func,\r\n    onClickToday: PropTypes.func,\r\n    onChangeView: PropTypes.func\r\n};\r\n\r\nexport default Toolbar;\r\n"]},"metadata":{},"sourceType":"module"}