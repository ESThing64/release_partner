{"ast":null,"code":"import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// material-ui\nimport{Box,Button,FormControl,FormHelperText,Grid,InputLabel,OutlinedInput}from'@mui/material';// third party\nimport{useDispatch}from'react-redux';import{Formik}from'formik';import*as Yup from'yup';import axios from'axios';// project imports\nimport AnimateButton from'ui-component/extended/AnimateButton';import useScriptRef from'hooks/useScriptRef';import{SNACKBAR_OPEN}from'store/actions';import{gridSpacing}from'store/constant';// ===========================|| MAILER SUBSCRIBER ||=========================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MailerSubscriber=function MailerSubscriber(_ref){var others=Object.assign({},_ref);var scriptedRef=useScriptRef();var dispatch=useDispatch();return/*#__PURE__*/_jsx(Formik,{initialValues:{email:'',submit:null},validationSchema:Yup.object().shape({email:Yup.string().email('Must be a valid email').max(255).required('Email is required')}),onSubmit:/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setErrors,setStatus,setSubmitting,options;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setErrors=_ref2.setErrors,setStatus=_ref2.setStatus,setSubmitting=_ref2.setSubmitting;_context.prev=1;options={headers:{'content-type':'application/json'}};_context.next=5;return axios.post('https://yourapicall',{email:values.email},options);case 5:dispatch({type:SNACKBAR_OPEN,open:true,message:'Success! Please check inbox and confirm.',variant:'alert',alertSeverity:'success'});if(scriptedRef.current){setStatus({success:true});setSubmitting(false);}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);if(scriptedRef.current){setStatus({success:false});setErrors({submit:_context.t0===null||_context.t0===void 0?void 0:_context.t0.message});setSubmitting(false);}case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}(),children:function children(_ref4){var errors=_ref4.errors,handleBlur=_ref4.handleBlur,handleChange=_ref4.handleChange,handleSubmit=_ref4.handleSubmit,isSubmitting=_ref4.isSubmitting,touched=_ref4.touched,values=_ref4.values;return/*#__PURE__*/_jsxs(\"form\",_objectSpread(_objectSpread({noValidate:true,onSubmit:handleSubmit},others),{},{children:[/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:true,zeroMinWidth:true,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,error:Boolean(touched.email&&errors.email),children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"outlined-adornment-email-forgot\",children:\"Email Address\"}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"outlined-adornment-email-forgot\",type:\"email\",defaultValue:values.email,name:\"email\",onBlur:handleBlur,onChange:handleChange,label:\"Email Address\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(AnimateButton,{children:/*#__PURE__*/_jsx(Button,{disableElevation:true,disabled:isSubmitting,type:\"submit\",variant:\"contained\",size:\"large\",sx:{px:2.75,py:1.5},children:\"Subscribe\"})})})]}),touched.email&&errors.email&&/*#__PURE__*/_jsx(Box,{sx:{mt:1},children:/*#__PURE__*/_jsx(FormHelperText,{error:true,id:\"standard-weight-helper-text-email-forgot\",children:errors.email})}),errors.submit&&/*#__PURE__*/_jsx(Box,{sx:{mt:3},children:/*#__PURE__*/_jsx(FormHelperText,{error:true,children:errors.submit})})]}));}});};export default MailerSubscriber;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/pages/maintenance/ComingSoon/ComingSoon1/MailerSubscriber.js"],"names":["Box","Button","FormControl","FormHelperText","Grid","InputLabel","OutlinedInput","useDispatch","Formik","Yup","axios","AnimateButton","useScriptRef","SNACKBAR_OPEN","gridSpacing","MailerSubscriber","others","scriptedRef","dispatch","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","options","headers","post","type","open","message","variant","alertSeverity","current","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","px","py","mt"],"mappings":"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","sourcesContent":["// material-ui\r\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput } from '@mui/material';\r\n\r\n// third party\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ===========================|| MAILER SUBSCRIBER ||=========================== //\r\n\r\nconst MailerSubscriber = ({ ...others }) => {\r\n    const scriptedRef = useScriptRef();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    const options = {\r\n                        headers: {\r\n                            'content-type': 'application/json'\r\n                        }\r\n                    };\r\n                    await axios.post('https://yourapicall', { email: values.email }, options);\r\n                    dispatch({\r\n                        type: SNACKBAR_OPEN,\r\n                        open: true,\r\n                        message: 'Success! Please check inbox and confirm.',\r\n                        variant: 'alert',\r\n                        alertSeverity: 'success'\r\n                    });\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err?.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <FormControl fullWidth error={Boolean(touched.email && errors.email)}>\r\n                                <InputLabel htmlFor=\"outlined-adornment-email-forgot\">Email Address</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-email-forgot\"\r\n                                    type=\"email\"\r\n                                    defaultValue={values.email}\r\n                                    name=\"email\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    label=\"Email Address\"\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{\r\n                                        px: 2.75,\r\n                                        py: 1.5\r\n                                    }}\r\n                                >\r\n                                    Subscribe\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {touched.email && errors.email && (\r\n                        <Box sx={{ mt: 1 }}>\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-forgot\">\r\n                                {errors.email}\r\n                            </FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    {errors.submit && (\r\n                        <Box sx={{ mt: 3 }}>\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default MailerSubscriber;\r\n"]},"metadata":{},"sourceType":"module"}