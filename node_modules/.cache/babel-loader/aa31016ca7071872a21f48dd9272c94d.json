{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';// material-ui\nimport{styled}from'@mui/material/styles';import{Divider,Grid,Paper,ToggleButton,ToggleButtonGroup}from'@mui/material';// assets\nimport FormatAlignLeftIcon from'@mui/icons-material/FormatAlignLeft';import FormatAlignCenterIcon from'@mui/icons-material/FormatAlignCenter';import FormatAlignRightIcon from'@mui/icons-material/FormatAlignRight';import FormatAlignJustifyIcon from'@mui/icons-material/FormatAlignJustify';import FormatBoldIcon from'@mui/icons-material/FormatBold';import FormatItalicIcon from'@mui/icons-material/FormatItalic';import FormatUnderlinedIcon from'@mui/icons-material/FormatUnderlined';import FormatColorFillIcon from'@mui/icons-material/FormatColorFill';import ArrowDropDownIcon from'@mui/icons-material/ArrowDropDown';// style constant\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledToggleButtonGroup=styled(ToggleButtonGroup)(function(_ref){var theme=_ref.theme;return{'& .MuiToggleButtonGroup-grouped':{margin:theme.spacing(0.5),border:0,'&.Mui-disabled':{border:0},'&:not(:first-of-type)':{borderRadius:theme.shape.borderRadius},'&:first-of-type':{borderRadius:theme.shape.borderRadius}}};});// ============================|| UI TOGGLE BUTTON - CUSTOMIZED DIVIDERS ||============================ //\nexport default function CustomizedDividers(){var _useState=useState(function(){return['bold','italic'];}),_useState2=_slicedToArray(_useState,2),formats=_useState2[0],setFormats=_useState2[1];var handleFormat=function handleFormat(event,newFormats){setFormats(newFormats);};var _useState3=useState('left'),_useState4=_slicedToArray(_useState3,2),alignment=_useState4[0],setAlignment=_useState4[1];var handleAlignment=function handleAlignment(event,newAlignment){setAlignment(newAlignment);};return/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"center\",children:/*#__PURE__*/_jsxs(Paper,{elevation:0,sx:{display:'flex',border:function border(theme){return\"1px solid \".concat(theme.palette.divider);},flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(StyledToggleButtonGroup,{size:\"small\",value:alignment,exclusive:true,onChange:handleAlignment,\"aria-label\":\"text alignment\",color:\"primary\",children:[/*#__PURE__*/_jsx(ToggleButton,{value:\"left\",\"aria-label\":\"left aligned\",children:/*#__PURE__*/_jsx(FormatAlignLeftIcon,{})}),/*#__PURE__*/_jsx(ToggleButton,{value:\"center\",\"aria-label\":\"centered\",children:/*#__PURE__*/_jsx(FormatAlignCenterIcon,{})}),/*#__PURE__*/_jsx(ToggleButton,{value:\"right\",\"aria-label\":\"right aligned\",children:/*#__PURE__*/_jsx(FormatAlignRightIcon,{})}),/*#__PURE__*/_jsx(ToggleButton,{value:\"justify\",\"aria-label\":\"justified\",disabled:true,children:/*#__PURE__*/_jsx(FormatAlignJustifyIcon,{})})]}),/*#__PURE__*/_jsx(Divider,{flexItem:true,orientation:\"vertical\",sx:{mx:0.5,my:1}}),/*#__PURE__*/_jsxs(StyledToggleButtonGroup,{size:\"small\",value:formats,onChange:handleFormat,\"aria-label\":\"text formatting\",color:\"secondary\",children:[/*#__PURE__*/_jsx(ToggleButton,{value:\"bold\",\"aria-label\":\"bold\",children:/*#__PURE__*/_jsx(FormatBoldIcon,{})}),/*#__PURE__*/_jsx(ToggleButton,{value:\"italic\",\"aria-label\":\"italic\",children:/*#__PURE__*/_jsx(FormatItalicIcon,{})}),/*#__PURE__*/_jsx(ToggleButton,{value:\"underlined\",\"aria-label\":\"underlined\",children:/*#__PURE__*/_jsx(FormatUnderlinedIcon,{})}),/*#__PURE__*/_jsxs(ToggleButton,{value:\"color\",\"aria-label\":\"color\",disabled:true,children:[/*#__PURE__*/_jsx(FormatColorFillIcon,{}),/*#__PURE__*/_jsx(ArrowDropDownIcon,{})]})]})]})});}","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/ui-elements/advance/UIToggleButton/CustomizedDividers.js"],"names":["useState","styled","Divider","Grid","Paper","ToggleButton","ToggleButtonGroup","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","FormatColorFillIcon","ArrowDropDownIcon","StyledToggleButtonGroup","theme","margin","spacing","border","borderRadius","shape","CustomizedDividers","formats","setFormats","handleFormat","event","newFormats","alignment","setAlignment","handleAlignment","newAlignment","display","palette","divider","flexWrap","mx","my"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Divider, Grid, Paper, ToggleButton, ToggleButtonGroup } from '@mui/material';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';\r\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\r\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\r\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\r\nimport FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\n\r\n// style constant\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n    '& .MuiToggleButtonGroup-grouped': {\r\n        margin: theme.spacing(0.5),\r\n        border: 0,\r\n        '&.Mui-disabled': {\r\n            border: 0\r\n        },\r\n        '&:not(:first-of-type)': {\r\n            borderRadius: theme.shape.borderRadius\r\n        },\r\n        '&:first-of-type': {\r\n            borderRadius: theme.shape.borderRadius\r\n        }\r\n    }\r\n}));\r\n\r\n// ============================|| UI TOGGLE BUTTON - CUSTOMIZED DIVIDERS ||============================ //\r\n\r\nexport default function CustomizedDividers() {\r\n    const [formats, setFormats] = useState(() => ['bold', 'italic']);\r\n    const handleFormat = (event, newFormats) => {\r\n        setFormats(newFormats);\r\n    };\r\n\r\n    const [alignment, setAlignment] = useState('left');\r\n    const handleAlignment = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Paper\r\n                elevation={0}\r\n                sx={{\r\n                    display: 'flex',\r\n                    border: (theme) => `1px solid ${theme.palette.divider}`,\r\n                    flexWrap: 'wrap'\r\n                }}\r\n            >\r\n                <StyledToggleButtonGroup\r\n                    size=\"small\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleAlignment}\r\n                    aria-label=\"text alignment\"\r\n                    color=\"primary\"\r\n                >\r\n                    <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                        <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\" aria-label=\"centered\">\r\n                        <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                        <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                        <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                </StyledToggleButtonGroup>\r\n                <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\r\n                <StyledToggleButtonGroup\r\n                    size=\"small\"\r\n                    value={formats}\r\n                    onChange={handleFormat}\r\n                    aria-label=\"text formatting\"\r\n                    color=\"secondary\"\r\n                >\r\n                    <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n                        <FormatBoldIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n                        <FormatItalicIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n                        <FormatUnderlinedIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"color\" aria-label=\"color\" disabled>\r\n                        <FormatColorFillIcon />\r\n                        <ArrowDropDownIcon />\r\n                    </ToggleButton>\r\n                </StyledToggleButtonGroup>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}