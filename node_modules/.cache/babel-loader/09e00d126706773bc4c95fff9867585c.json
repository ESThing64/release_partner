{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';// material-ui\nimport{useTheme}from'@mui/material/styles';import{Button,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,TextField,Typography}from'@mui/material';// ===============================|| UI DIALOG - FORMS ||=============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FormDialog(){var theme=useTheme();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleClickOpen,children:\"Open form dialog\"}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"form-dialog-title\",children:\"Subscribe\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",component:\"span\",children:\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"})}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,size:\"small\",id:\"name\",label:\"Email Address\",type:\"email\",fullWidth:true})]}),/*#__PURE__*/_jsxs(DialogActions,{sx:{pr:2.5},children:[/*#__PURE__*/_jsx(Button,{sx:{color:theme.palette.error.dark},onClick:handleClose,color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",onClick:handleClose,children:\"Subscribe\"})]})]})]});}","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/ui-elements/advance/UIDialog/FormDialog.js"],"names":["useState","useTheme","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Typography","FormDialog","theme","open","setOpen","handleClickOpen","handleClose","pr","color","palette","error","dark"],"mappings":"8KAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA;AACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,aAAzB,CAAwCC,aAAxC,CAAuDC,iBAAvD,CAA0EC,WAA1E,CAAuFC,SAAvF,CAAkGC,UAAlG,KAAoH,eAApH,CAEA;wFAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACjC,GAAMC,CAAAA,KAAK,CAAGV,QAAQ,EAAtB,CACA,cAAwBD,QAAQ,CAAC,KAAD,CAAhC,wCAAOY,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BD,OAAO,CAAC,IAAD,CAAP,CACH,CAFD,CAIA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBF,OAAO,CAAC,KAAD,CAAP,CACH,CAFD,CAIA,mBACI,oCACI,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,OAAO,CAAEC,eAApC,8BADJ,cAII,MAAC,MAAD,EAAQ,IAAI,CAAEF,IAAd,CAAoB,OAAO,CAAEG,WAA7B,CAA0C,kBAAgB,mBAA1D,wBACI,KAAC,WAAD,EAAa,EAAE,CAAC,mBAAhB,uBADJ,cAEI,MAAC,aAAD,yBACI,KAAC,iBAAD,wBACI,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAC,MAAtC,2IADJ,EADJ,cAOI,KAAC,SAAD,EAAW,SAAS,KAApB,CAAqB,IAAI,CAAC,OAA1B,CAAkC,EAAE,CAAC,MAArC,CAA4C,KAAK,CAAC,eAAlD,CAAkE,IAAI,CAAC,OAAvE,CAA+E,SAAS,KAAxF,EAPJ,GAFJ,cAWI,MAAC,aAAD,EAAe,EAAE,CAAE,CAAEC,EAAE,CAAE,GAAN,CAAnB,wBACI,KAAC,MAAD,EAAQ,EAAE,CAAE,CAAEC,KAAK,CAAEN,KAAK,CAACO,OAAN,CAAcC,KAAd,CAAoBC,IAA7B,CAAZ,CAAiD,OAAO,CAAEL,WAA1D,CAAuE,KAAK,CAAC,WAA7E,oBADJ,cAII,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,OAAjC,CAAyC,OAAO,CAAEA,WAAlD,uBAJJ,GAXJ,GAJJ,GADJ,CA2BH","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography } from '@mui/material';\r\n\r\n// ===============================|| UI DIALOG - FORMS ||=============================== //\r\n\r\nexport default function FormDialog() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open form dialog\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n                            are running.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                    <TextField autoFocus size=\"small\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button sx={{ color: theme.palette.error.dark }} onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}