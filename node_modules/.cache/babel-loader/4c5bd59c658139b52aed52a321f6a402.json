{"ast":null,"code":"import _toConsumableArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import services from'utils/mockAdapter';// third-party\nimport jwt from'jsonwebtoken';// project imports\nimport config from'config';// constant\nvar JWT_SECRET=config.jwt.secret;var JWT_EXPIRES_TIME=config.jwt.timeout;var delay=function delay(timeout){return new Promise(function(res){return setTimeout(res,timeout);});};var users=[{id:'5e86809283e28b96d2d38537',email:'info@codedthemes.com',password:'123456',name:'JWT User'}];// ==============================|| MOCK SERVICES ||============================== //\nservices.onPost('/api/account/login').reply(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(request){var _JSON$parse,email,password,localUsers,user,serviceToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return delay(500);case 3:_JSON$parse=JSON.parse(request.data),email=_JSON$parse.email,password=_JSON$parse.password;if(window.localStorage.getItem('users')!==undefined&&window.localStorage.getItem('users')!==null){localUsers=window.localStorage.getItem('users');users=JSON.parse(localUsers);}user=users.find(function(_user){return _user.email===email;});if(user){_context.next=8;break;}return _context.abrupt(\"return\",[400,{message:'Verify Your Email & Password'}]);case 8:if(!(user.password!==password)){_context.next=10;break;}return _context.abrupt(\"return\",[400,{message:'Invalid Password'}]);case 10:serviceToken=jwt.sign({userId:user.id},JWT_SECRET,{expiresIn:JWT_EXPIRES_TIME});return _context.abrupt(\"return\",[200,{serviceToken:serviceToken,user:{id:user.id,email:user.email,name:user.name}}]);case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.error(_context.t0);return _context.abrupt(\"return\",[500,{message:'Server Error'}]);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function(_x){return _ref.apply(this,arguments);};}());services.onPost('/api/account/register').reply(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request){var _JSON$parse2,id,email,password,firstName,lastName;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return delay(500);case 3:_JSON$parse2=JSON.parse(request.data),id=_JSON$parse2.id,email=_JSON$parse2.email,password=_JSON$parse2.password,firstName=_JSON$parse2.firstName,lastName=_JSON$parse2.lastName;if(!(!email||!password)){_context2.next=6;break;}return _context2.abrupt(\"return\",[400,{message:'Enter Your Email & Password'}]);case 6:if(!(!firstName||!lastName)){_context2.next=8;break;}return _context2.abrupt(\"return\",[400,{message:'Enter Your Name'}]);case 8:users=[].concat(_toConsumableArray(users),[{id:id,email:email,password:password,name:\"\".concat(firstName,\" \").concat(lastName)}]);return _context2.abrupt(\"return\",[200,users]);case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);return _context2.abrupt(\"return\",[500,{message:'Server Error'}]);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12]]);}));return function(_x2){return _ref2.apply(this,arguments);};}());services.onGet('/api/account/me').reply(function(request){try{var Authorization=request.headers.Authorization;if(!Authorization){return[401,{message:'Token Missing'}];}if(window.localStorage.getItem('users')!==undefined&&window.localStorage.getItem('users')!==null){var localUsers=window.localStorage.getItem('users');users=JSON.parse(localUsers);}var serviceToken=Authorization.split(' ')[1];var jwData=jwt.verify(serviceToken,JWT_SECRET);var userId=jwData.userId;var user=users.find(function(_user){return _user.id===userId;});if(!user){return[401,{message:'Invalid Token'}];}return[200,{user:{id:user.id,email:user.email}}];}catch(err){return[500,{message:'Server Error'}];}});","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/_mockApis/account.js"],"names":["services","jwt","config","JWT_SECRET","secret","JWT_EXPIRES_TIME","timeout","delay","Promise","res","setTimeout","users","id","email","password","name","onPost","reply","request","JSON","parse","data","window","localStorage","getItem","undefined","localUsers","user","find","_user","message","serviceToken","sign","userId","expiresIn","console","error","firstName","lastName","onGet","Authorization","headers","split","jwData","verify","err"],"mappings":"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","sourcesContent":["import services from 'utils/mockAdapter';\r\n\r\n// third-party\r\nimport jwt from 'jsonwebtoken';\r\n\r\n// project imports\r\nimport config from 'config';\r\n\r\n// constant\r\nconst JWT_SECRET = config.jwt.secret;\r\nconst JWT_EXPIRES_TIME = config.jwt.timeout;\r\n\r\nconst delay = (timeout) => new Promise((res) => setTimeout(res, timeout));\r\n\r\nlet users = [\r\n    {\r\n        id: '5e86809283e28b96d2d38537',\r\n        email: 'info@codedthemes.com',\r\n        password: '123456',\r\n        name: 'JWT User'\r\n    }\r\n];\r\n\r\n// ==============================|| MOCK SERVICES ||============================== //\r\n\r\nservices.onPost('/api/account/login').reply(async (request) => {\r\n    try {\r\n        await delay(500);\r\n\r\n        const { email, password } = JSON.parse(request.data);\r\n\r\n        if (window.localStorage.getItem('users') !== undefined && window.localStorage.getItem('users') !== null) {\r\n            const localUsers = window.localStorage.getItem('users');\r\n            users = JSON.parse(localUsers);\r\n        }\r\n\r\n        const user = users.find((_user) => _user.email === email);\r\n\r\n        if (!user) {\r\n            return [400, { message: 'Verify Your Email & Password' }];\r\n        }\r\n\r\n        if (user.password !== password) {\r\n            return [400, { message: 'Invalid Password' }];\r\n        }\r\n\r\n        const serviceToken = jwt.sign({ userId: user.id }, JWT_SECRET, { expiresIn: JWT_EXPIRES_TIME });\r\n\r\n        return [\r\n            200,\r\n            {\r\n                serviceToken,\r\n                user: {\r\n                    id: user.id,\r\n                    email: user.email,\r\n                    name: user.name\r\n                }\r\n            }\r\n        ];\r\n    } catch (err) {\r\n        console.error(err);\r\n        return [500, { message: 'Server Error' }];\r\n    }\r\n});\r\n\r\nservices.onPost('/api/account/register').reply(async (request) => {\r\n    try {\r\n        await delay(500);\r\n\r\n        const { id, email, password, firstName, lastName } = JSON.parse(request.data);\r\n\r\n        if (!email || !password) {\r\n            return [400, { message: 'Enter Your Email & Password' }];\r\n        }\r\n\r\n        if (!firstName || !lastName) {\r\n            return [400, { message: 'Enter Your Name' }];\r\n        }\r\n\r\n        users = [\r\n            ...users,\r\n            {\r\n                id,\r\n                email,\r\n                password,\r\n                name: `${firstName} ${lastName}`\r\n            }\r\n        ];\r\n\r\n        return [200, users];\r\n    } catch (err) {\r\n        console.error(err);\r\n        return [500, { message: 'Server Error' }];\r\n    }\r\n});\r\n\r\nservices.onGet('/api/account/me').reply((request) => {\r\n    try {\r\n        const { Authorization } = request.headers;\r\n\r\n        if (!Authorization) {\r\n            return [401, { message: 'Token Missing' }];\r\n        }\r\n\r\n        if (window.localStorage.getItem('users') !== undefined && window.localStorage.getItem('users') !== null) {\r\n            const localUsers = window.localStorage.getItem('users');\r\n            users = JSON.parse(localUsers);\r\n        }\r\n\r\n        const serviceToken = Authorization.split(' ')[1];\r\n        const jwData = jwt.verify(serviceToken, JWT_SECRET);\r\n        const { userId } = jwData;\r\n        const user = users.find((_user) => _user.id === userId);\r\n\r\n        if (!user) {\r\n            return [401, { message: 'Invalid Token' }];\r\n        }\r\n\r\n        return [\r\n            200,\r\n            {\r\n                user: {\r\n                    id: user.id,\r\n                    email: user.email\r\n                }\r\n            }\r\n        ];\r\n    } catch (err) {\r\n        return [500, { message: 'Server Error' }];\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}