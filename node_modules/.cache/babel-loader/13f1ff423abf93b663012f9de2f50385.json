{"ast":null,"code":"import _regeneratorRuntime from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,Fragment}from'react';// material-ui\nimport{Chip,Divider,Grid,List,ListItemButton,ListItemAvatar,ListItemText,Typography}from'@mui/material';// project imports\nimport UserAvatar from'./UserAvatar';import axios from'utils/axios';// ==============================|| CHAT USER LIST ||============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserList=function UserList(_ref){var setUser=_ref.setUser;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var getData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/chat/users');case 2:response=_context.sent;setData(response.data.users);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref2.apply(this,arguments);};}();useEffect(function(){getData();},[]);return/*#__PURE__*/_jsx(List,{component:\"nav\",children:data.map(function(user){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(ListItemButton,{onClick:function onClick(){setUser(user);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(UserAvatar,{user:user})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:1,component:\"span\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:true,zeroMinWidth:true,component:\"span\",children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",color:\"inherit\",component:\"span\",sx:{overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap',display:'block'},children:user.name})}),/*#__PURE__*/_jsx(Grid,{item:true,component:\"span\",children:/*#__PURE__*/_jsx(Typography,{component:\"span\",variant:\"subtitle2\",children:user.lastMessage})})]}),secondary:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:1,component:\"span\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:true,zeroMinWidth:true,component:\"span\",children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",component:\"span\",sx:{overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap',display:'block'},children:user.status})}),/*#__PURE__*/_jsx(Grid,{item:true,component:\"span\",children:user.unReadChatCount!==0&&/*#__PURE__*/_jsx(Chip,{label:user.unReadChatCount,component:\"span\",color:\"secondary\",sx:{width:20,height:20,'& .MuiChip-label':{px:0.5}}})})]})})]}),/*#__PURE__*/_jsx(Divider,{})]},user.id);})});};export default UserList;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/chat/UserList.js"],"names":["useState","useEffect","Fragment","Chip","Divider","Grid","List","ListItemButton","ListItemAvatar","ListItemText","Typography","UserAvatar","axios","UserList","setUser","data","setData","getData","get","response","users","map","user","overflow","textOverflow","whiteSpace","display","name","lastMessage","status","unReadChatCount","width","height","px","id"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport { Chip, Divider, Grid, List, ListItemButton, ListItemAvatar, ListItemText, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport UserAvatar from './UserAvatar';\r\nimport axios from 'utils/axios';\r\n\r\n// ==============================|| CHAT USER LIST ||============================== //\r\n\r\nconst UserList = ({ setUser }) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const getData = async () => {\r\n        const response = await axios.get('/api/chat/users');\r\n        setData(response.data.users);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <List component=\"nav\">\r\n            {data.map((user) => (\r\n                <Fragment key={user.id}>\r\n                    <ListItemButton\r\n                        onClick={() => {\r\n                            setUser(user);\r\n                        }}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <UserAvatar user={user} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <Grid container alignItems=\"center\" spacing={1} component=\"span\">\r\n                                    <Grid item xs zeroMinWidth component=\"span\">\r\n                                        <Typography\r\n                                            variant=\"h5\"\r\n                                            color=\"inherit\"\r\n                                            component=\"span\"\r\n                                            sx={{\r\n                                                overflow: 'hidden',\r\n                                                textOverflow: 'ellipsis',\r\n                                                whiteSpace: 'nowrap',\r\n                                                display: 'block'\r\n                                            }}\r\n                                        >\r\n                                            {user.name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item component=\"span\">\r\n                                        <Typography component=\"span\" variant=\"subtitle2\">\r\n                                            {user.lastMessage}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                            secondary={\r\n                                <Grid container alignItems=\"center\" spacing={1} component=\"span\">\r\n                                    <Grid item xs zeroMinWidth component=\"span\">\r\n                                        <Typography\r\n                                            variant=\"caption\"\r\n                                            component=\"span\"\r\n                                            sx={{\r\n                                                overflow: 'hidden',\r\n                                                textOverflow: 'ellipsis',\r\n                                                whiteSpace: 'nowrap',\r\n                                                display: 'block'\r\n                                            }}\r\n                                        >\r\n                                            {user.status}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item component=\"span\">\r\n                                        {user.unReadChatCount !== 0 && (\r\n                                            <Chip\r\n                                                label={user.unReadChatCount}\r\n                                                component=\"span\"\r\n                                                color=\"secondary\"\r\n                                                sx={{\r\n                                                    width: 20,\r\n                                                    height: 20,\r\n                                                    '& .MuiChip-label': {\r\n                                                        px: 0.5\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                        />\r\n                    </ListItemButton>\r\n                    <Divider />\r\n                </Fragment>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nUserList.propTypes = {\r\n    setUser: PropTypes.func\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}