{"ast":null,"code":"import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useSelector}from'react-redux';// material-ui\nimport{useTheme}from'@mui/material/styles';import{Grid,MenuItem,TextField,Typography}from'@mui/material';// third-party\nimport ApexCharts from'apexcharts';import Chart from'react-apexcharts';// project imports\nimport SkeletonTotalGrowthBarChart from'ui-component/cards/Skeleton/TotalGrowthBarChart';import MainCard from'ui-component/cards/MainCard';import{gridSpacing}from'store/constant';// chart data\nimport chartData from'./chart-data/total-growth-bar-chart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var status=[{value:'today',label:'Today'},{value:'month',label:'This Month'},{value:'year',label:'This Year'}];// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\nvar TotalGrowthBarChart=function TotalGrowthBarChart(_ref){var isLoading=_ref.isLoading;var _useState=useState('today'),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var theme=useTheme();var customization=useSelector(function(state){return state.customization;});var navType=customization.navType;var primary=theme.palette.text.primary;var darkLight=theme.palette.dark.light;var grey200=theme.palette.grey[200];var grey500=theme.palette.grey[500];var primary200=theme.palette.primary[200];var primaryDark=theme.palette.primary.dark;var secondaryMain=theme.palette.secondary.main;var secondaryLight=theme.palette.secondary.light;useEffect(function(){var newChartData=_objectSpread(_objectSpread({},chartData.options),{},{colors:[primary200,primaryDark,secondaryMain,secondaryLight],xaxis:{labels:{style:{colors:[primary,primary,primary,primary,primary,primary,primary,primary,primary,primary,primary,primary]}}},yaxis:{labels:{style:{colors:[primary]}}},grid:{borderColor:navType==='dark'?darkLight+20:grey200},tooltip:{theme:navType==='dark'?'dark':'light'},legend:{labels:{colors:grey500}}});// do not load chart when loading\nif(!isLoading){ApexCharts.exec(\"bar-chart\",'updateOptions',newChartData);}},[navType,primary200,primaryDark,secondaryMain,secondaryLight,primary,darkLight,grey200,isLoading,grey500]);return/*#__PURE__*/_jsx(_Fragment,{children:isLoading?/*#__PURE__*/_jsx(SkeletonTotalGrowthBarChart,{}):/*#__PURE__*/_jsx(MainCard,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Total Growth\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h3\",children:\"$2,324.00\"})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TextField,{id:\"standard-select-currency\",select:true,value:value,onChange:function onChange(e){return setValue(e.target.value);},children:status.map(function(option){return/*#__PURE__*/_jsx(MenuItem,{value:option.value,children:option.label},option.value);})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Chart,_objectSpread({},chartData))})]})})});};export default TotalGrowthBarChart;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/dashboard/Default/TotalGrowthBarChart.js"],"names":["useState","useEffect","useSelector","useTheme","Grid","MenuItem","TextField","Typography","ApexCharts","Chart","SkeletonTotalGrowthBarChart","MainCard","gridSpacing","chartData","status","value","label","TotalGrowthBarChart","isLoading","setValue","theme","customization","state","navType","primary","palette","text","darkLight","dark","light","grey200","grey","grey500","primary200","primaryDark","secondaryMain","secondary","main","secondaryLight","newChartData","options","colors","xaxis","labels","style","yaxis","grid","borderColor","tooltip","legend","exec","e","target","map","option"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// chart data\r\nimport chartData from './chart-data/total-growth-bar-chart';\r\n\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Today'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'This Month'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'This Year'\r\n    }\r\n];\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = ({ isLoading }) => {\r\n    const [value, setValue] = useState('today');\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n    const grey500 = theme.palette.grey[500];\r\n\r\n    const primary200 = theme.palette.primary[200];\r\n    const primaryDark = theme.palette.primary.dark;\r\n    const secondaryMain = theme.palette.secondary.main;\r\n    const secondaryLight = theme.palette.secondary.light;\r\n\r\n    useEffect(() => {\r\n        const newChartData = {\r\n            ...chartData.options,\r\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: grey500\r\n                }\r\n            }\r\n        };\r\n\r\n        // do not load chart when loading\r\n        if (!isLoading) {\r\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\r\n        }\r\n    }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalGrowthBarChart />\r\n            ) : (\r\n                <MainCard>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle2\">Total Growth</Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        id=\"standard-select-currency\"\r\n                                        select\r\n                                        value={value}\r\n                                        onChange={(e) => setValue(e.target.value)}\r\n                                    >\r\n                                        {status.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Chart {...chartData} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalGrowthBarChart.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalGrowthBarChart;\r\n"]},"metadata":{},"sourceType":"module"}