{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,Fragment}from'react';// material-ui\nimport{Avatar,Button,Card,CardContent,Dialog,DialogTitle,Divider,List,ListItemButton,ListItemAvatar,ListItemText}from'@mui/material';// assets\nimport AddIcon from'@mui/icons-material/Add';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var avatarImage=require.context('assets/images/profile',true);// alert user data\nvar emails=[{email:'username@company.com',avatar:'user-1.png'},{email:'user02@company.com',avatar:'user-2.png'}];// ===============================|| DIALOG ||=============================== //\nfunction SimpleDialog(_ref){var onClose=_ref.onClose,selectedValue=_ref.selectedValue,open=_ref.open;var handleClose=function handleClose(){onClose(selectedValue);};var handleListItemClick=function handleListItemClick(value){onClose(value);};return/*#__PURE__*/_jsxs(Dialog,{onClose:handleClose,\"aria-labelledby\":\"simple-dialog-title\",open:open,children:[/*#__PURE__*/_jsx(DialogTitle,{style:{cursor:'move'},id:\"draggable-dialog-title\",children:\"User Account\"}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{sx:{pt:0},children:/*#__PURE__*/_jsxs(List,{children:[emails.map(function(item,index){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(ListItemButton,{onClick:function onClick(){return handleListItemClick(item.email);},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{alt:\"User 1\",src:avatarImage(\"./\".concat(item.avatar)).default})}),/*#__PURE__*/_jsx(ListItemText,{primary:item.email})]}),/*#__PURE__*/_jsx(Divider,{})]},index);}),/*#__PURE__*/_jsxs(ListItemButton,{autoFocus:true,onClick:function onClick(){return handleListItemClick('addAccount');},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{sx:{width:32,height:32,border:'2px solid',color:'grey.500',borderColor:'grey.500',bgcolor:'transparent'},children:/*#__PURE__*/_jsx(AddIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Add New Account\"})]})]})})})]});}// ===============================|| UI DIALOG - SIMPLE ||=============================== //\nexport default function SimpleDialogDemo(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(emails[0].email),_useState4=_slicedToArray(_useState3,2),selectedValue=_useState4[0],setSelectedValue=_useState4[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(value){setOpen(false);setSelectedValue(value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleClickOpen,children:\"Open simple dialog\"}),/*#__PURE__*/_jsx(SimpleDialog,{selectedValue:selectedValue,open:open,onClose:handleClose})]});}","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/ui-elements/advance/UIDialog/SimpleDialog.js"],"names":["useState","Fragment","Avatar","Button","Card","CardContent","Dialog","DialogTitle","Divider","List","ListItemButton","ListItemAvatar","ListItemText","AddIcon","avatarImage","require","context","emails","email","avatar","SimpleDialog","onClose","selectedValue","open","handleClose","handleListItemClick","value","cursor","pt","map","item","index","default","width","height","border","color","borderColor","bgcolor","SimpleDialogDemo","setOpen","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItemButton,\r\n    ListItemAvatar,\r\n    ListItemText\r\n} from '@mui/material';\r\n\r\n// assets\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// alert user data\r\nconst emails = [\r\n    {\r\n        email: 'username@company.com',\r\n        avatar: 'user-1.png'\r\n    },\r\n    {\r\n        email: 'user02@company.com',\r\n        avatar: 'user-2.png'\r\n    }\r\n];\r\n\r\n// ===============================|| DIALOG ||=============================== //\r\n\r\nfunction SimpleDialog({ onClose, selectedValue, open }) {\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                User Account\r\n            </DialogTitle>\r\n            <Card>\r\n                <CardContent sx={{ pt: 0 }}>\r\n                    <List>\r\n                        {emails.map((item, index) => (\r\n                            <Fragment key={index}>\r\n                                <ListItemButton onClick={() => handleListItemClick(item.email)}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"User 1\" src={avatarImage(`./${item.avatar}`).default} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={item.email} />\r\n                                </ListItemButton>\r\n                                <Divider />\r\n                            </Fragment>\r\n                        ))}\r\n\r\n                        <ListItemButton autoFocus onClick={() => handleListItemClick('addAccount')}>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        border: '2px solid',\r\n                                        color: 'grey.500',\r\n                                        borderColor: 'grey.500',\r\n                                        bgcolor: 'transparent'\r\n                                    }}\r\n                                >\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"Add New Account\" />\r\n                        </ListItemButton>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired\r\n};\r\n\r\n// ===============================|| UI DIALOG - SIMPLE ||=============================== //\r\n\r\nexport default function SimpleDialogDemo() {\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedValue, setSelectedValue] = useState(emails[0].email);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" onClick={handleClickOpen}>\r\n                Open simple dialog\r\n            </Button>\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}