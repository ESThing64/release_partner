{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{useDispatch}from'react-redux';// material-ui\nimport{Button,CardContent,Grid,IconButton,InputAdornment,TextField,Tooltip}from'@mui/material';// third-party\nimport{CopyToClipboard}from'react-copy-to-clipboard';// project imports\nimport MainCard from'ui-component/cards/MainCard';import SecondaryAction from'ui-component/cards/CardSecondaryAction';import SubCard from'ui-component/cards/SubCard';import{SNACKBAR_OPEN}from'store/actions';import{gridSpacing}from'store/constant';// assets\nimport ContentCopyTwoToneIcon from'@mui/icons-material/ContentCopyTwoTone';import ContentCutTwoToneIcon from'@mui/icons-material/ContentCutTwoTone';import LinkIcon from'@mui/icons-material/Link';// ==============================|| PLUGIN - COPY TO CLIPBOARD ||============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ClipboardPage=function ClipboardPage(){var dispatch=useDispatch();var _useState=useState('https://berrydashboard.io/'),_useState2=_slicedToArray(_useState,2),text1=_useState2[0],setText1=_useState2[1];var _useState3=useState('Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'),_useState4=_slicedToArray(_useState3,2),text2=_useState4[0],setText2=_useState4[1];var _useState5=useState('Lorem ipsum cacilds, vidis litro abertis. Consetis adipiscings elitis. Pra lá , depois divoltis porris, paradis. Paisis, filhis, espiritis santis. Mé faiz elementum girarzis, nisi eros vermeio, in elementis mé pra quem é amistosis quis leo. Manduma pindureta quium dia nois paga.'),_useState6=_slicedToArray(_useState5,1),text3=_useState6[0];return/*#__PURE__*/_jsx(MainCard,{title:\"Clipboard\",secondary:/*#__PURE__*/_jsx(SecondaryAction,{icon:/*#__PURE__*/_jsx(LinkIcon,{fontSize:\"small\"}),link:\"https://www.npmjs.com/package/react-copy-to-clipboard\"}),children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(SubCard,{title:\"Copy from TextField\",children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Website\",type:\"text\",value:text1,onChange:function onChange(e){setText1(e.target.value);},InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(CopyToClipboard,{text:text1,onCopy:function onCopy(){return dispatch({type:SNACKBAR_OPEN,anchorOrigin:{vertical:'top',horizontal:'right'},transition:'SlideLeft',open:true,message:'Text Copied',variant:'alert',alertSeverity:'success',close:false});},children:/*#__PURE__*/_jsx(Tooltip,{title:\"Copy\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"Copy from another element\",edge:\"end\",size:\"large\",children:/*#__PURE__*/_jsx(ContentCopyTwoToneIcon,{sx:{fontSize:'1.1rem'}})})})})})}})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(SubCard,{title:\"Copy from TextArea\",children:[/*#__PURE__*/_jsx(TextField,{multiline:true,rows:4,fullWidth:true,label:\"Copy text\",onChange:function onChange(e){return setText2(e.target.value);},value:text2,sx:{mb:gridSpacing}}),/*#__PURE__*/_jsx(CopyToClipboard,{text:text2,onCopy:function onCopy(){return dispatch({type:SNACKBAR_OPEN,anchorOrigin:{vertical:'top',horizontal:'right'},transition:'SlideLeft',open:true,message:'Text Copied',variant:'alert',alertSeverity:'success',close:false});},children:/*#__PURE__*/_jsxs(Button,{variant:\"contained\",size:\"small\",sx:{mr:1.5},children:[/*#__PURE__*/_jsx(ContentCopyTwoToneIcon,{sx:{fontSize:'1rem',mr:1}}),\" Copy\"]})}),/*#__PURE__*/_jsx(CopyToClipboard,{text:text2,onCopy:function onCopy(){setText2('');dispatch({type:SNACKBAR_OPEN,anchorOrigin:{vertical:'top',horizontal:'right'},transition:'SlideLeft',open:true,message:'Text Cut',variant:'alert',alertSeverity:'success',close:false});},children:/*#__PURE__*/_jsxs(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",children:[/*#__PURE__*/_jsx(ContentCutTwoToneIcon,{sx:{fontSize:'1rem',mr:1}}),\" Cut\"]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(SubCard,{title:\"Copy from Container\",secondary:/*#__PURE__*/_jsx(CopyToClipboard,{text:text3,onCopy:function onCopy(){return dispatch({type:SNACKBAR_OPEN,anchorOrigin:{vertical:'top',horizontal:'right'},transition:'SlideLeft',open:true,message:'Text Copied',variant:'alert',alertSeverity:'success',close:false});},children:/*#__PURE__*/_jsx(Tooltip,{title:\"Copy\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",sx:{mr:1.5,px:1,minWidth:'auto'},children:/*#__PURE__*/_jsx(ContentCopyTwoToneIcon,{sx:{fontSize:'1rem'}})})})}),children:/*#__PURE__*/_jsx(CardContent,{sx:{p:0,pb:2.5},children:text3})})})]})});};export default ClipboardPage;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/forms/plugins/Clipboard.js"],"names":["useState","useDispatch","Button","CardContent","Grid","IconButton","InputAdornment","TextField","Tooltip","CopyToClipboard","MainCard","SecondaryAction","SubCard","SNACKBAR_OPEN","gridSpacing","ContentCopyTwoToneIcon","ContentCutTwoToneIcon","LinkIcon","ClipboardPage","dispatch","text1","setText1","text2","setText2","text3","e","target","value","endAdornment","type","anchorOrigin","vertical","horizontal","transition","open","message","variant","alertSeverity","close","fontSize","mb","mr","px","minWidth","p","pb"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, CardContent, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@mui/material';\r\n\r\n// third-party\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport ContentCopyTwoToneIcon from '@mui/icons-material/ContentCopyTwoTone';\r\nimport ContentCutTwoToneIcon from '@mui/icons-material/ContentCutTwoTone';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\n// ==============================|| PLUGIN - COPY TO CLIPBOARD ||============================== //\r\n\r\nconst ClipboardPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [text1, setText1] = useState('https://berrydashboard.io/');\r\n    const [text2, setText2] = useState(\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n    );\r\n    const [text3] = useState(\r\n        'Lorem ipsum cacilds, vidis litro abertis. Consetis adipiscings elitis. Pra lá , depois divoltis porris, paradis. Paisis, filhis, espiritis santis. Mé faiz elementum girarzis, nisi eros vermeio, in elementis mé pra quem é amistosis quis leo. Manduma pindureta quium dia nois paga.'\r\n    );\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"Clipboard\"\r\n            secondary={\r\n                <SecondaryAction icon={<LinkIcon fontSize=\"small\" />} link=\"https://www.npmjs.com/package/react-copy-to-clipboard\" />\r\n            }\r\n        >\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Copy from TextField\">\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Website\"\r\n                            type=\"text\"\r\n                            value={text1}\r\n                            onChange={(e) => {\r\n                                setText1(e.target.value);\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <CopyToClipboard\r\n                                            text={text1}\r\n                                            onCopy={() =>\r\n                                                dispatch({\r\n                                                    type: SNACKBAR_OPEN,\r\n                                                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                                    transition: 'SlideLeft',\r\n                                                    open: true,\r\n                                                    message: 'Text Copied',\r\n                                                    variant: 'alert',\r\n                                                    alertSeverity: 'success',\r\n                                                    close: false\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <Tooltip title=\"Copy\">\r\n                                                <IconButton aria-label=\"Copy from another element\" edge=\"end\" size=\"large\">\r\n                                                    <ContentCopyTwoToneIcon sx={{ fontSize: '1.1rem' }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </CopyToClipboard>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Copy from TextArea\">\r\n                        <TextField\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth\r\n                            label=\"Copy text\"\r\n                            onChange={(e) => setText2(e.target.value)}\r\n                            value={text2}\r\n                            sx={{ mb: gridSpacing }}\r\n                        />\r\n                        <CopyToClipboard\r\n                            text={text2}\r\n                            onCopy={() =>\r\n                                dispatch({\r\n                                    type: SNACKBAR_OPEN,\r\n                                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                    transition: 'SlideLeft',\r\n                                    open: true,\r\n                                    message: 'Text Copied',\r\n                                    variant: 'alert',\r\n                                    alertSeverity: 'success',\r\n                                    close: false\r\n                                })\r\n                            }\r\n                        >\r\n                            <Button variant=\"contained\" size=\"small\" sx={{ mr: 1.5 }}>\r\n                                <ContentCopyTwoToneIcon sx={{ fontSize: '1rem', mr: 1 }} /> Copy\r\n                            </Button>\r\n                        </CopyToClipboard>\r\n                        <CopyToClipboard\r\n                            text={text2}\r\n                            onCopy={() => {\r\n                                setText2('');\r\n                                dispatch({\r\n                                    type: SNACKBAR_OPEN,\r\n                                    anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                    transition: 'SlideLeft',\r\n                                    open: true,\r\n                                    message: 'Text Cut',\r\n                                    variant: 'alert',\r\n                                    alertSeverity: 'success',\r\n                                    close: false\r\n                                });\r\n                            }}\r\n                        >\r\n                            <Button variant=\"contained\" size=\"small\" color=\"secondary\">\r\n                                <ContentCutTwoToneIcon sx={{ fontSize: '1rem', mr: 1 }} /> Cut\r\n                            </Button>\r\n                        </CopyToClipboard>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard\r\n                        title=\"Copy from Container\"\r\n                        secondary={\r\n                            <CopyToClipboard\r\n                                text={text3}\r\n                                onCopy={() =>\r\n                                    dispatch({\r\n                                        type: SNACKBAR_OPEN,\r\n                                        anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                        transition: 'SlideLeft',\r\n                                        open: true,\r\n                                        message: 'Text Copied',\r\n                                        variant: 'alert',\r\n                                        alertSeverity: 'success',\r\n                                        close: false\r\n                                    })\r\n                                }\r\n                            >\r\n                                <Tooltip title=\"Copy\">\r\n                                    <Button variant=\"contained\" sx={{ mr: 1.5, px: 1, minWidth: 'auto' }}>\r\n                                        <ContentCopyTwoToneIcon sx={{ fontSize: '1rem' }} />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </CopyToClipboard>\r\n                        }\r\n                    >\r\n                        <CardContent sx={{ p: 0, pb: 2.5 }}>{text3}</CardContent>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ClipboardPage;\r\n"]},"metadata":{},"sourceType":"module"}