{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';// material-ui\nimport{useTheme}from'@mui/material/styles';import{ButtonBase,Grid,Skeleton,Tooltip}from'@mui/material';// project imports\nimport Avatar from'ui-component/extended/Avatar';import ColorOptions from'../ColorOptions';// assets\nimport CheckIcon from'@mui/icons-material/Check';// ==============================|| PRODUCT - COLOR OPTIONS ||============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Color=function Color(_ref){var bg=_ref.bg,id=_ref.id,colors=_ref.colors,label=_ref.label,handelFilter=_ref.handelFilter;var theme=useTheme();return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Tooltip,{title:label,children:/*#__PURE__*/_jsx(ButtonBase,{sx:{borderRadius:'50%'},onClick:function onClick(){return handelFilter('colors',id);},children:/*#__PURE__*/_jsx(Avatar,{color:\"inherit\",size:\"badge\",sx:{bgcolor:bg,color:theme.palette.mode==='light'?theme.palette.grey[50]:theme.palette.grey[800],opacity:colors.some(function(item){return item===id;})?0.6:1},children:colors.some(function(item){return item===id;})&&/*#__PURE__*/_jsx(CheckIcon,{sx:{color:theme.palette.mode==='dark'?'dark.800':'grey.50'},fontSize:\"inherit\"})})})})});};// ==============================|| PRODUCT - COLOR ||============================== //\nvar Colors=function Colors(_ref2){var colors=_ref2.colors,handelFilter=_ref2.handelFilter;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isColorsLoading=_useState2[0],setColorLoading=_useState2[1];useEffect(function(){setColorLoading(false);},[]);return/*#__PURE__*/_jsx(_Fragment,{children:isColorsLoading?/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",width:\"100%\",height:158})}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:1,alignItems:\"center\",children:ColorOptions.map(function(color,index){return/*#__PURE__*/_jsx(Color,{id:color.value,bg:color.bg,label:color.label,colors:colors,handelFilter:handelFilter},index);})})});};export default Colors;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/e-commerce/Products/Colors.js"],"names":["useState","useEffect","useTheme","ButtonBase","Grid","Skeleton","Tooltip","Avatar","ColorOptions","CheckIcon","Color","bg","id","colors","label","handelFilter","theme","borderRadius","bgcolor","color","palette","mode","grey","opacity","some","item","Colors","isColorsLoading","setColorLoading","map","index","value"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Grid, Skeleton, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport ColorOptions from '../ColorOptions';\r\n\r\n// assets\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\n// ==============================|| PRODUCT - COLOR OPTIONS ||============================== //\r\n\r\nconst Color = ({ bg, id, colors, label, handelFilter }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Grid item>\r\n            <Tooltip title={label}>\r\n                <ButtonBase sx={{ borderRadius: '50%' }} onClick={() => handelFilter('colors', id)}>\r\n                    <Avatar\r\n                        color=\"inherit\"\r\n                        size=\"badge\"\r\n                        sx={{\r\n                            bgcolor: bg,\r\n                            color: theme.palette.mode === 'light' ? theme.palette.grey[50] : theme.palette.grey[800],\r\n                            opacity: colors.some((item) => item === id) ? 0.6 : 1\r\n                        }}\r\n                    >\r\n                        {colors.some((item) => item === id) && (\r\n                            <CheckIcon sx={{ color: theme.palette.mode === 'dark' ? 'dark.800' : 'grey.50' }} fontSize=\"inherit\" />\r\n                        )}\r\n                    </Avatar>\r\n                </ButtonBase>\r\n            </Tooltip>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nColor.propTypes = {\r\n    bg: PropTypes.string,\r\n    id: PropTypes.string,\r\n    label: PropTypes.string,\r\n    colors: PropTypes.array,\r\n    handelFilter: PropTypes.func\r\n};\r\n\r\n// ==============================|| PRODUCT - COLOR ||============================== //\r\n\r\nconst Colors = ({ colors, handelFilter }) => {\r\n    const [isColorsLoading, setColorLoading] = useState(true);\r\n    useEffect(() => {\r\n        setColorLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isColorsLoading ? (\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" width=\"100%\" height={158} />\r\n                </Grid>\r\n            ) : (\r\n                <Grid container spacing={1} alignItems=\"center\">\r\n                    {ColorOptions.map((color, index) => (\r\n                        <Color key={index} id={color.value} bg={color.bg} label={color.label} colors={colors} handelFilter={handelFilter} />\r\n                    ))}\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nColors.propTypes = {\r\n    colors: PropTypes.array,\r\n    handelFilter: PropTypes.func\r\n};\r\n\r\nexport default Colors;\r\n"]},"metadata":{},"sourceType":"module"}