{"ast":null,"code":"// material-ui\nimport{Button,Checkbox,FormControlLabel,Grid,Stack,Typography,TextField}from'@mui/material';// project imports\nimport AnimateButton from'ui-component/extended/AnimateButton';// third-party\nimport{useFormik}from'formik';import*as yup from'yup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var validationSchema=yup.object({firstName:yup.string().required('First Name is required'),lastName:yup.string().required('Last Name is required')});// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\nvar AddressForm=function AddressForm(_ref){var shippingData=_ref.shippingData,setShippingData=_ref.setShippingData,handleNext=_ref.handleNext,setErrorIndex=_ref.setErrorIndex;var formik=useFormik({initialValues:{firstName:shippingData.firstName,lastName:shippingData.lastName},validationSchema:validationSchema,onSubmit:function onSubmit(values){setShippingData({firstName:values.firstName,lastName:values.lastName});handleNext();}});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,sx:{mb:2},children:\"Shipping address\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:formik.handleSubmit,id:\"validation-forms\",children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{id:\"firstName\",name:\"firstName\",label:\"First Name *\",defaultValue:formik.values.firstName,onChange:formik.handleChange,error:formik.touched.firstName&&Boolean(formik.errors.firstName),helperText:formik.touched.firstName&&formik.errors.firstName,fullWidth:true,autoComplete:\"given-name\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{id:\"lastName\",name:\"lastName\",label:\"Last Name *\",defaultValue:formik.values.lastName,onChange:formik.handleChange,error:formik.touched.lastName&&Boolean(formik.errors.lastName),helperText:formik.touched.lastName&&formik.errors.lastName,fullWidth:true,autoComplete:\"family-name\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{id:\"address1\",name:\"address1\",label:\"Address line 1\",fullWidth:true,autoComplete:\"shipping address-line1\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{id:\"address2\",name:\"address2\",label:\"Address line 2\",fullWidth:true,autoComplete:\"shipping address-line2\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{id:\"city\",name:\"city\",label:\"City\",fullWidth:true,autoComplete:\"shipping address-level2\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{id:\"state\",name:\"state\",label:\"State/Province/Region\",fullWidth:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{id:\"zip\",name:\"zip\",label:\"Zip / Postal code\",fullWidth:true,autoComplete:\"shipping postal-code\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{id:\"country\",name:\"country\",label:\"Country\",fullWidth:true,autoComplete:\"shipping country\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{color:\"secondary\",name:\"saveAddress\",value:\"yes\"}),label:\"Use this address for payment details\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(AnimateButton,{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",sx:{my:3,ml:1},type:\"submit\",onClick:function onClick(){return setErrorIndex(0);},children:\"Next\"})})})})]})})]});};export default AddressForm;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/forms/forms-wizard/ValidationWizard/AddressForm.js"],"names":["Button","Checkbox","FormControlLabel","Grid","Stack","Typography","TextField","AnimateButton","useFormik","yup","validationSchema","object","firstName","string","required","lastName","AddressForm","shippingData","setShippingData","handleNext","setErrorIndex","formik","initialValues","onSubmit","values","mb","handleSubmit","handleChange","touched","Boolean","errors","my","ml"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, Checkbox, FormControlLabel, Grid, Stack, Typography, TextField } from '@mui/material';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    firstName: yup.string().required('First Name is required'),\r\n    lastName: yup.string().required('Last Name is required')\r\n});\r\n\r\n// ==============================|| FORM WIZARD - VALIDATION  ||============================== //\r\n\r\nconst AddressForm = ({ shippingData, setShippingData, handleNext, setErrorIndex }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: shippingData.firstName,\r\n            lastName: shippingData.lastName\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            setShippingData({\r\n                firstName: values.firstName,\r\n                lastName: values.lastName\r\n            });\r\n            handleNext();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" gutterBottom sx={{ mb: 2 }}>\r\n                Shipping address\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit} id=\"validation-forms\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"First Name *\"\r\n                            defaultValue={formik.values.firstName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n                            helperText={formik.touched.firstName && formik.errors.firstName}\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Last Name *\"\r\n                            defaultValue={formik.values.lastName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n                            helperText={formik.touched.lastName && formik.errors.lastName}\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"address1\" name=\"address1\" label=\"Address line 1\" fullWidth autoComplete=\"shipping address-line1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField id=\"address2\" name=\"address2\" label=\"Address line 2\" fullWidth autoComplete=\"shipping address-line2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"city\" name=\"city\" label=\"City\" fullWidth autoComplete=\"shipping address-level2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"zip\" name=\"zip\" label=\"Zip / Postal code\" fullWidth autoComplete=\"shipping postal-code\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"country\" name=\"country\" label=\"Country\" fullWidth autoComplete=\"shipping country\" />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                            label=\"Use this address for payment details\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" sx={{ my: 3, ml: 1 }} type=\"submit\" onClick={() => setErrorIndex(0)}>\r\n                                    Next\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nAddressForm.propTypes = {\r\n    shippingData: PropTypes.object,\r\n    setShippingData: PropTypes.func,\r\n    handleNext: PropTypes.func,\r\n    setErrorIndex: PropTypes.func\r\n};\r\n\r\nexport default AddressForm;\r\n"]},"metadata":{},"sourceType":"module"}