{"ast":null,"code":"import{useDispatch}from'react-redux';// material-ui\nimport{Button,FormControl,FormHelperText,Grid,InputLabel,Select,Stack,MenuItem}from'@mui/material';// project imports\nimport MainCard from'ui-component/cards/MainCard';import AnimateButton from'ui-component/extended/AnimateButton';import{SNACKBAR_OPEN}from'store/actions';import{gridSpacing}from'store/constant';// third-party\nimport{useFormik}from'formik';import*as yup from'yup';/**\r\n * 'Enter your age'\r\n * yup.number Expected 0 arguments, but got 1 */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validationSchema=yup.object({age:yup.number().required('Age selection is required.')});// ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\nvar SelectForms=function SelectForms(){var dispatch=useDispatch();var formik=useFormik({initialValues:{age:''},validationSchema:validationSchema,onSubmit:function onSubmit(){dispatch({type:SNACKBAR_OPEN,open:true,message:'Select - Submit Success',variant:'alert',alertSeverity:'success'});}});return/*#__PURE__*/_jsx(MainCard,{title:\"Select\",children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{sx:{m:1,minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"age-select\",children:\"Age\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"age-select\",id:\"age\",name:\"age\",defaultValue:formik.values.age,onChange:formik.handleChange,label:\"Age\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"None\"})}),/*#__PURE__*/_jsx(MenuItem,{value:10,children:\"Ten\"}),/*#__PURE__*/_jsx(MenuItem,{value:20,children:\"Twenty\"}),/*#__PURE__*/_jsx(MenuItem,{value:30,children:\"Thirty\"})]}),formik.errors.age&&/*#__PURE__*/_jsx(FormHelperText,{error:true,id:\"standard-weight-helper-text-email-login\",children:formik.errors.age})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(AnimateButton,{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",type:\"submit\",children:\"Submit\"})})})})]})})});};export default SelectForms;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/forms/forms-validation/SelectForms.js"],"names":["useDispatch","Button","FormControl","FormHelperText","Grid","InputLabel","Select","Stack","MenuItem","MainCard","AnimateButton","SNACKBAR_OPEN","gridSpacing","useFormik","yup","validationSchema","object","age","number","required","SelectForms","dispatch","formik","initialValues","onSubmit","type","open","message","variant","alertSeverity","handleSubmit","m","minWidth","values","handleChange","errors"],"mappings":"AAAA,OAASA,WAAT,KAA4B,aAA5B,CAEA;AACA,OAASC,MAAT,CAAiBC,WAAjB,CAA8BC,cAA9B,CAA8CC,IAA9C,CAAoDC,UAApD,CAAgEC,MAAhE,CAAwEC,KAAxE,CAA+EC,QAA/E,KAA+F,eAA/F,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,qCAA1B,CACA,OAASC,aAAT,KAA8B,eAA9B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CAEA;AACA,OAASC,SAAT,KAA0B,QAA1B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA;AACA;AACA,gD,wFACA,GAAMC,CAAAA,gBAAgB,CAAGD,GAAG,CAACE,MAAJ,CAAW,CAChCC,GAAG,CAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,CAAsB,4BAAtB,CAD2B,CAAX,CAAzB,CAIA;AAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMC,CAAAA,QAAQ,CAAGrB,WAAW,EAA5B,CAEA,GAAMsB,CAAAA,MAAM,CAAGT,SAAS,CAAC,CACrBU,aAAa,CAAE,CACXN,GAAG,CAAE,EADM,CADM,CAIrBF,gBAAgB,CAAhBA,gBAJqB,CAKrBS,QAAQ,CAAE,mBAAM,CACZH,QAAQ,CAAC,CACLI,IAAI,CAAEd,aADD,CAELe,IAAI,CAAE,IAFD,CAGLC,OAAO,CAAE,yBAHJ,CAILC,OAAO,CAAE,OAJJ,CAKLC,aAAa,CAAE,SALV,CAAD,CAAR,CAOH,CAboB,CAAD,CAAxB,CAgBA,mBACI,KAAC,QAAD,EAAU,KAAK,CAAC,QAAhB,uBACI,aAAM,QAAQ,CAAEP,MAAM,CAACQ,YAAvB,uBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAElB,WAAzB,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,MAAC,WAAD,EAAa,EAAE,CAAE,CAAEmB,CAAC,CAAE,CAAL,CAAQC,QAAQ,CAAE,GAAlB,CAAjB,wBACI,KAAC,UAAD,EAAY,EAAE,CAAC,YAAf,iBADJ,cAEI,MAAC,MAAD,EACI,OAAO,CAAC,YADZ,CAEI,EAAE,CAAC,KAFP,CAGI,IAAI,CAAC,KAHT,CAII,YAAY,CAAEV,MAAM,CAACW,MAAP,CAAchB,GAJhC,CAKI,QAAQ,CAAEK,MAAM,CAACY,YALrB,CAMI,KAAK,CAAC,KANV,wBAQI,KAAC,QAAD,EAAU,KAAK,CAAC,EAAhB,uBACI,4BADJ,EARJ,cAWI,KAAC,QAAD,EAAU,KAAK,CAAE,EAAjB,iBAXJ,cAYI,KAAC,QAAD,EAAU,KAAK,CAAE,EAAjB,oBAZJ,cAaI,KAAC,QAAD,EAAU,KAAK,CAAE,EAAjB,oBAbJ,GAFJ,CAiBKZ,MAAM,CAACa,MAAP,CAAclB,GAAd,eACG,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,EAAE,CAAC,yCAAzB,UACKK,MAAM,CAACa,MAAP,CAAclB,GADnB,EAlBR,GADJ,EADJ,cA0BI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,KAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,cAAc,CAAC,UAAtC,uBACI,KAAC,aAAD,wBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,QAAjC,oBADJ,EADJ,EADJ,EA1BJ,GADJ,EADJ,EADJ,CA0CH,CA7DD,CA+DA,cAAeG,CAAAA,WAAf","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, FormControl, FormHelperText, Grid, InputLabel, Select, Stack, MenuItem } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n/**\r\n * 'Enter your age'\r\n * yup.number Expected 0 arguments, but got 1 */\r\nconst validationSchema = yup.object({\r\n    age: yup.number().required('Age selection is required.')\r\n});\r\n\r\n// ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\r\n\r\nconst SelectForms = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            age: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: () => {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Select - Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MainCard title=\"Select\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                            <InputLabel id=\"age-select\">Age</InputLabel>\r\n                            <Select\r\n                                labelId=\"age-select\"\r\n                                id=\"age\"\r\n                                name=\"age\"\r\n                                defaultValue={formik.values.age}\r\n                                onChange={formik.handleChange}\r\n                                label=\"Age\"\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={10}>Ten</MenuItem>\r\n                                <MenuItem value={20}>Twenty</MenuItem>\r\n                                <MenuItem value={30}>Thirty</MenuItem>\r\n                            </Select>\r\n                            {formik.errors.age && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {formik.errors.age}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SelectForms;\r\n"]},"metadata":{},"sourceType":"module"}