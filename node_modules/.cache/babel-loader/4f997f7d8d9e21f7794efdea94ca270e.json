{"ast":null,"code":"import PropTypes from'prop-types';import{useNavigate}from'react-router-dom';// project imports\nimport useAuth from'hooks/useAuth';import config from'config';import{useEffect}from'react';// ==============================|| GUEST GUARD ||============================== //\n/**\r\n * Guest guard for routes having no auth required\r\n * @param {PropTypes.node} children children element/node\r\n */var GuestGuard=function GuestGuard(_ref){var children=_ref.children;var _useAuth=useAuth(),isLoggedIn=_useAuth.isLoggedIn;var navigate=useNavigate();useEffect(function(){if(isLoggedIn){navigate(config.defaultPath,{replace:true});}},[isLoggedIn,navigate]);return children;};GuestGuard.propTypes={children:PropTypes.node};export default GuestGuard;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/utils/route-guard/GuestGuard.js"],"names":["PropTypes","useNavigate","useAuth","config","useEffect","GuestGuard","children","isLoggedIn","navigate","defaultPath","replace","propTypes","node"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA;AACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA;AAEA;AACA;AACA;AACA,GAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACjC,aAAuBJ,OAAO,EAA9B,CAAQK,UAAR,UAAQA,UAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEAG,SAAS,CAAC,UAAM,CACZ,GAAIG,UAAJ,CAAgB,CACZC,QAAQ,CAACL,MAAM,CAACM,WAAR,CAAqB,CAAEC,OAAO,CAAE,IAAX,CAArB,CAAR,CACH,CACJ,CAJQ,CAIN,CAACH,UAAD,CAAaC,QAAb,CAJM,CAAT,CAMA,MAAOF,CAAAA,QAAP,CACH,CAXD,CAaAD,UAAU,CAACM,SAAX,CAAuB,CACnBL,QAAQ,CAAEN,SAAS,CAACY,IADD,CAAvB,CAIA,cAAeP,CAAAA,UAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// project imports\r\nimport useAuth from 'hooks/useAuth';\r\nimport config from 'config';\r\nimport { useEffect } from 'react';\r\n\r\n// ==============================|| GUEST GUARD ||============================== //\r\n\r\n/**\r\n * Guest guard for routes having no auth required\r\n * @param {PropTypes.node} children children element/node\r\n */\r\n\r\nconst GuestGuard = ({ children }) => {\r\n    const { isLoggedIn } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            navigate(config.defaultPath, { replace: true });\r\n        }\r\n    }, [isLoggedIn, navigate]);\r\n\r\n    return children;\r\n};\r\n\r\nGuestGuard.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default GuestGuard;\r\n"]},"metadata":{},"sourceType":"module"}