{"ast":null,"code":"import{useDispatch}from'react-redux';// material-ui\nimport{Button,Grid,FormControl,FormControlLabel,FormHelperText,Radio,RadioGroup,Stack}from'@mui/material';// project imports\nimport MainCard from'ui-component/cards/MainCard';import AnimateButton from'ui-component/extended/AnimateButton';import{SNACKBAR_OPEN}from'store/actions';// third-party\nimport{useFormik}from'formik';import*as yup from'yup';/**\r\n * 'Select your favorite color'\r\n * yup.string Expected 0 arguments, but got 1 */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validationSchema=yup.object({color:yup.string().required('Color selection is required')});// ==============================|| FORM VALIDATION - RADIO GROUP FORMIK  ||============================== //\nvar RadioGroupForms=function RadioGroupForms(){var dispatch=useDispatch();var formik=useFormik({initialValues:{color:''},validationSchema:validationSchema,onSubmit:function onSubmit(){dispatch({type:SNACKBAR_OPEN,open:true,message:'Radio - Submit Success',variant:'alert',alertSeverity:'success'});}});return/*#__PURE__*/_jsx(MainCard,{title:\"Radio\",children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsxs(RadioGroup,{row:true,\"aria-label\":\"color\",defaultValue:formik.values.color,onChange:formik.handleChange,name:\"color\",id:\"color\",children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"primary\",control:/*#__PURE__*/_jsx(Radio,{sx:{color:'primary.main','&.Mui-checked':{color:'primary.main'}}}),label:\"Primary\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"error\",control:/*#__PURE__*/_jsx(Radio,{sx:{color:'error.main','&.Mui-checked':{color:'error.main'}}}),label:\"Error\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"secondary\",control:/*#__PURE__*/_jsx(Radio,{sx:{color:'secondary.main','&.Mui-checked':{color:'secondary.main'}}}),label:\"Secondary\"})]})}),formik.errors.color&&/*#__PURE__*/_jsx(FormHelperText,{error:true,id:\"standard-weight-helper-text-email-login\",children:formik.errors.color})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(AnimateButton,{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",type:\"submit\",children:\"Submit\"})})})})]})})});};export default RadioGroupForms;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/forms/forms-validation/RadioGroupForms.js"],"names":["useDispatch","Button","Grid","FormControl","FormControlLabel","FormHelperText","Radio","RadioGroup","Stack","MainCard","AnimateButton","SNACKBAR_OPEN","useFormik","yup","validationSchema","object","color","string","required","RadioGroupForms","dispatch","formik","initialValues","onSubmit","type","open","message","variant","alertSeverity","handleSubmit","values","handleChange","errors"],"mappings":"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","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Grid, FormControl, FormControlLabel, FormHelperText, Radio, RadioGroup, Stack } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n/**\r\n * 'Select your favorite color'\r\n * yup.string Expected 0 arguments, but got 1 */\r\nconst validationSchema = yup.object({\r\n    color: yup.string().required('Color selection is required')\r\n});\r\n\r\n// ==============================|| FORM VALIDATION - RADIO GROUP FORMIK  ||============================== //\r\n\r\nconst RadioGroupForms = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            color: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: () => {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Radio - Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MainCard title=\"Radio\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <FormControl>\r\n                            <RadioGroup\r\n                                row\r\n                                aria-label=\"color\"\r\n                                defaultValue={formik.values.color}\r\n                                onChange={formik.handleChange}\r\n                                name=\"color\"\r\n                                id=\"color\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    value=\"primary\"\r\n                                    control={\r\n                                        <Radio\r\n                                            sx={{\r\n                                                color: 'primary.main',\r\n                                                '&.Mui-checked': { color: 'primary.main' }\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Primary\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"error\"\r\n                                    control={\r\n                                        <Radio\r\n                                            sx={{\r\n                                                color: 'error.main',\r\n                                                '&.Mui-checked': { color: 'error.main' }\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Error\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"secondary\"\r\n                                    control={\r\n                                        <Radio\r\n                                            sx={{\r\n                                                color: 'secondary.main',\r\n                                                '&.Mui-checked': { color: 'secondary.main' }\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Secondary\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        {formik.errors.color && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                {formik.errors.color}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default RadioGroupForms;\r\n"]},"metadata":{},"sourceType":"module"}