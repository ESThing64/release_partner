{"ast":null,"code":"import _toConsumableArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// project imports\nimport{columns,columnsOrder,comments,items,profiles,userStory,userStoryOrder}from'./kanban';import{ADD_COLUMN,EDIT_COLUMN,DELETE_COLUMN,UPDATE_COLUMN_ORDER,UPDATE_COLUMN_ITEM_ORDER,DELETE_ITEM,SELECT_ITEM,ADD_ITEM,ADD_ITEM_COMMENT,EDIT_ITEM,ADD_STORY,EDIT_STORY,UPDATE_STORY_ORDER,UPDATE_STORY_ITEM_ORDER,ADD_STORY_COMMENT,DELETE_STORY}from'./actions';var initialState={columns:columns,columnsOrder:columnsOrder,comments:comments,items:items,profiles:profiles,selectedItem:false,userStory:userStory,userStoryOrder:userStoryOrder};var kanbanReducer=function kanbanReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var newColumn;var currentColumn;var newUserStory;var currentStory;var newItems;var itemIds;switch(action.type){case ADD_COLUMN:return _objectSpread(_objectSpread({},state),{},{columns:[].concat(_toConsumableArray(state.columns),[action.payload.column]),columnsOrder:[].concat(_toConsumableArray(state.columnsOrder),[action.payload.column.id])});case UPDATE_COLUMN_ORDER:return _objectSpread(_objectSpread({},state),{},{columnsOrder:action.payload.columnsOrder});case EDIT_COLUMN:state.columns.splice(state.columns.findIndex(function(column){return column.id===action.payload.column.id;}),1,action.payload.column);return _objectSpread(_objectSpread({},state),{},{columns:state.columns});case DELETE_COLUMN:state.columns.splice(state.columns.findIndex(function(column){return column.id===action.payload.columnId;}),1);state.columnsOrder.splice(state.columnsOrder.findIndex(function(columnId){return columnId===action.payload.columnId;}),1);return _objectSpread(_objectSpread({},state),{},{columns:state.columns,columnsOrder:state.columnsOrder});case ADD_ITEM:if(action.payload.columnId!=='0'){newColumn=state.columns.map(function(column){if(column.id===action.payload.columnId){return _objectSpread(_objectSpread({},column),{},{itemIds:column.itemIds?[].concat(_toConsumableArray(column.itemIds),[action.payload.item.id]):[action.payload.item.id]});}return column;});}else{newColumn=state.columns;}if(action.payload.storyId!=='0'){newUserStory=state.userStory.map(function(story){if(story.id===action.payload.storyId){return _objectSpread(_objectSpread({},story),{},{itemIds:story.itemIds?[].concat(_toConsumableArray(story.itemIds),[action.payload.item.id]):[action.payload.item.id]});}return story;});}else{newUserStory=state.userStory;}return _objectSpread(_objectSpread({},state),{},{items:[].concat(_toConsumableArray(state.items),[action.payload.item]),columns:newColumn,userStory:newUserStory});case EDIT_ITEM:state.items.splice(state.items.findIndex(function(item){return item.id===action.payload.item.id;}),1,action.payload.item);newUserStory=state.userStory;if(action.payload.storyId){currentStory=state.userStory.filter(function(story){return story.itemIds.filter(function(itemId){return itemId===action.payload.item.id;})[0];})[0];if(currentStory!==undefined&&currentStory.id!==action.payload.storyId){newUserStory=state.userStory.map(function(story){if(story.itemIds.filter(function(itemId){return itemId===action.payload.item.id;})[0]){return _objectSpread(_objectSpread({},story),{},{itemIds:story.itemIds.filter(function(itemId){return itemId!==action.payload.item.id;})});}if(story.id===action.payload.storyId){return _objectSpread(_objectSpread({},story),{},{itemIds:story.itemIds?[].concat(_toConsumableArray(story.itemIds),[action.payload.item.id]):[action.payload.item.id]});}return story;});}if(currentStory===undefined){newUserStory=state.userStory.map(function(story){if(story.id===action.payload.storyId){return _objectSpread(_objectSpread({},story),{},{itemIds:story.itemIds?[].concat(_toConsumableArray(story.itemIds),[action.payload.item.id]):[action.payload.item.id]});}return story;});}}newColumn=state.columns;if(action.payload.columnId){currentColumn=state.columns.filter(function(column){return column.itemIds.filter(function(itemId){return itemId===action.payload.item.id;})[0];})[0];if(currentColumn!==undefined&&currentColumn.id!==action.payload.columnId){newColumn=state.columns.map(function(column){if(column.itemIds.filter(function(itemId){return itemId===action.payload.item.id;})[0]){return _objectSpread(_objectSpread({},column),{},{itemIds:column.itemIds.filter(function(itemId){return itemId!==action.payload.item.id;})});}if(column.id===action.payload.columnId){return _objectSpread(_objectSpread({},column),{},{itemIds:column.itemIds?[].concat(_toConsumableArray(column.itemIds),[action.payload.item.id]):[action.payload.item.id]});}return column;});}if(currentColumn===undefined){newColumn=state.columns.map(function(column){if(column.id===action.payload.columnId){return _objectSpread(_objectSpread({},column),{},{itemIds:column.itemIds?[].concat(_toConsumableArray(column.itemIds),[action.payload.item.id]):[action.payload.item.id]});}return column;});}}return _objectSpread(_objectSpread({},state),{},{items:state.items,columns:newColumn,userStory:newUserStory});case UPDATE_COLUMN_ITEM_ORDER:return _objectSpread(_objectSpread({},state),{},{columns:action.payload.columns});case SELECT_ITEM:return _objectSpread(_objectSpread({},state),{},{selectedItem:action.payload.selectedItem});case ADD_ITEM_COMMENT:newItems=state.items.map(function(item){if(item.id===action.payload.itemId){return _objectSpread(_objectSpread({},item),{},{commentIds:item.commentIds?[].concat(_toConsumableArray(item.commentIds),[action.payload.comment.id]):[action.payload.comment.id]});}return item;});return _objectSpread(_objectSpread({},state),{},{items:newItems,comments:[].concat(_toConsumableArray(state.comments),[action.payload.comment])});case DELETE_ITEM:newColumn=state.columns.map(function(column){itemIds=column.itemIds.filter(function(id){return id!==action.payload.itemId;});return _objectSpread(_objectSpread({},column),{},{itemIds:itemIds});});newUserStory=state.userStory.map(function(story){itemIds=story.itemIds.filter(function(id){return id!==action.payload.itemId;});return _objectSpread(_objectSpread({},story),{},{itemIds:itemIds});});state.items.splice(state.items.findIndex(function(item){return item.id===action.payload.itemId;}),1);return _objectSpread(_objectSpread({},state),{},{items:state.items,columns:newColumn,userStory:newUserStory});case ADD_STORY:return _objectSpread(_objectSpread({},state),{},{userStory:[].concat(_toConsumableArray(state.userStory),[action.payload.story]),userStoryOrder:[].concat(_toConsumableArray(state.userStoryOrder),[action.payload.story.id])});case EDIT_STORY:state.userStory.splice(state.userStory.findIndex(function(story){return story.id===action.payload.story.id;}),1,action.payload.story);return _objectSpread(_objectSpread({},state),{},{userStory:state.userStory});case UPDATE_STORY_ORDER:return _objectSpread(_objectSpread({},state),{},{userStoryOrder:action.payload.userStoryOrder});case UPDATE_STORY_ITEM_ORDER:return _objectSpread(_objectSpread({},state),{},{userStory:action.payload.userStory});case ADD_STORY_COMMENT:newUserStory=state.userStory.map(function(story){if(story.id===action.payload.storyId){return _objectSpread(_objectSpread({},story),{},{commentIds:story.commentIds?[].concat(_toConsumableArray(story.commentIds),[action.payload.comment.id]):[action.payload.comment.id]});}return story;});return _objectSpread(_objectSpread({},state),{},{userStory:newUserStory,comments:[].concat(_toConsumableArray(state.comments),[action.payload.comment])});case DELETE_STORY:state.userStory.splice(state.userStory.findIndex(function(story){return story.id===action.payload.storyId;}),1);state.userStoryOrder.splice(state.userStoryOrder.findIndex(function(storyId){return storyId===action.payload.storyId;}),1);return _objectSpread(_objectSpread({},state),{},{userStory:state.userStory,userStoryOrder:state.userStoryOrder});default:return state;}};export default kanbanReducer;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/store/kanbanReducer.js"],"names":["columns","columnsOrder","comments","items","profiles","userStory","userStoryOrder","ADD_COLUMN","EDIT_COLUMN","DELETE_COLUMN","UPDATE_COLUMN_ORDER","UPDATE_COLUMN_ITEM_ORDER","DELETE_ITEM","SELECT_ITEM","ADD_ITEM","ADD_ITEM_COMMENT","EDIT_ITEM","ADD_STORY","EDIT_STORY","UPDATE_STORY_ORDER","UPDATE_STORY_ITEM_ORDER","ADD_STORY_COMMENT","DELETE_STORY","initialState","selectedItem","kanbanReducer","state","action","newColumn","currentColumn","newUserStory","currentStory","newItems","itemIds","type","payload","column","id","splice","findIndex","columnId","map","item","storyId","story","filter","itemId","undefined","commentIds","comment"],"mappings":"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","sourcesContent":["// project imports\r\nimport { columns, columnsOrder, comments, items, profiles, userStory, userStoryOrder } from './kanban';\r\nimport {\r\n    ADD_COLUMN,\r\n    EDIT_COLUMN,\r\n    DELETE_COLUMN,\r\n    UPDATE_COLUMN_ORDER,\r\n    UPDATE_COLUMN_ITEM_ORDER,\r\n    DELETE_ITEM,\r\n    SELECT_ITEM,\r\n    ADD_ITEM,\r\n    ADD_ITEM_COMMENT,\r\n    EDIT_ITEM,\r\n    ADD_STORY,\r\n    EDIT_STORY,\r\n    UPDATE_STORY_ORDER,\r\n    UPDATE_STORY_ITEM_ORDER,\r\n    ADD_STORY_COMMENT,\r\n    DELETE_STORY\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    columns,\r\n    columnsOrder,\r\n    comments,\r\n    items,\r\n    profiles,\r\n    selectedItem: false,\r\n    userStory,\r\n    userStoryOrder\r\n};\r\n\r\nconst kanbanReducer = (state = initialState, action) => {\r\n    let newColumn;\r\n    let currentColumn;\r\n    let newUserStory;\r\n    let currentStory;\r\n    let newItems;\r\n    let itemIds;\r\n\r\n    switch (action.type) {\r\n        case ADD_COLUMN:\r\n            return {\r\n                ...state,\r\n                columns: [...state.columns, action.payload.column],\r\n                columnsOrder: [...state.columnsOrder, action.payload.column.id]\r\n            };\r\n        case UPDATE_COLUMN_ORDER:\r\n            return {\r\n                ...state,\r\n                columnsOrder: action.payload.columnsOrder\r\n            };\r\n        case EDIT_COLUMN:\r\n            state.columns.splice(\r\n                state.columns.findIndex((column) => column.id === action.payload.column.id),\r\n                1,\r\n                action.payload.column\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                columns: state.columns\r\n            };\r\n        case DELETE_COLUMN:\r\n            state.columns.splice(\r\n                state.columns.findIndex((column) => column.id === action.payload.columnId),\r\n                1\r\n            );\r\n\r\n            state.columnsOrder.splice(\r\n                state.columnsOrder.findIndex((columnId) => columnId === action.payload.columnId),\r\n                1\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                columns: state.columns,\r\n                columnsOrder: state.columnsOrder\r\n            };\r\n        case ADD_ITEM:\r\n            if (action.payload.columnId !== '0') {\r\n                newColumn = state.columns.map((column) => {\r\n                    if (column.id === action.payload.columnId) {\r\n                        return {\r\n                            ...column,\r\n                            itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                        };\r\n                    }\r\n                    return column;\r\n                });\r\n            } else {\r\n                newColumn = state.columns;\r\n            }\r\n\r\n            if (action.payload.storyId !== '0') {\r\n                newUserStory = state.userStory.map((story) => {\r\n                    if (story.id === action.payload.storyId) {\r\n                        return { ...story, itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id] };\r\n                    }\r\n                    return story;\r\n                });\r\n            } else {\r\n                newUserStory = state.userStory;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: [...state.items, action.payload.item],\r\n                columns: newColumn,\r\n                userStory: newUserStory\r\n            };\r\n        case EDIT_ITEM:\r\n            state.items.splice(\r\n                state.items.findIndex((item) => item.id === action.payload.item.id),\r\n                1,\r\n                action.payload.item\r\n            );\r\n\r\n            newUserStory = state.userStory;\r\n            if (action.payload.storyId) {\r\n                currentStory = state.userStory.filter((story) => story.itemIds.filter((itemId) => itemId === action.payload.item.id)[0])[0];\r\n\r\n                if (currentStory !== undefined && currentStory.id !== action.payload.storyId) {\r\n                    newUserStory = state.userStory.map((story) => {\r\n                        if (story.itemIds.filter((itemId) => itemId === action.payload.item.id)[0]) {\r\n                            return {\r\n                                ...story,\r\n                                itemIds: story.itemIds.filter((itemId) => itemId !== action.payload.item.id)\r\n                            };\r\n                        }\r\n                        if (story.id === action.payload.storyId) {\r\n                            return {\r\n                                ...story,\r\n                                itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return story;\r\n                    });\r\n                }\r\n\r\n                if (currentStory === undefined) {\r\n                    newUserStory = state.userStory.map((story) => {\r\n                        if (story.id === action.payload.storyId) {\r\n                            return {\r\n                                ...story,\r\n                                itemIds: story.itemIds ? [...story.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return story;\r\n                    });\r\n                }\r\n            }\r\n\r\n            newColumn = state.columns;\r\n            if (action.payload.columnId) {\r\n                currentColumn = state.columns.filter(\r\n                    (column) => column.itemIds.filter((itemId) => itemId === action.payload.item.id)[0]\r\n                )[0];\r\n                if (currentColumn !== undefined && currentColumn.id !== action.payload.columnId) {\r\n                    newColumn = state.columns.map((column) => {\r\n                        if (column.itemIds.filter((itemId) => itemId === action.payload.item.id)[0]) {\r\n                            return {\r\n                                ...column,\r\n                                itemIds: column.itemIds.filter((itemId) => itemId !== action.payload.item.id)\r\n                            };\r\n                        }\r\n                        if (column.id === action.payload.columnId) {\r\n                            return {\r\n                                ...column,\r\n                                itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return column;\r\n                    });\r\n                }\r\n\r\n                if (currentColumn === undefined) {\r\n                    newColumn = state.columns.map((column) => {\r\n                        if (column.id === action.payload.columnId) {\r\n                            return {\r\n                                ...column,\r\n                                itemIds: column.itemIds ? [...column.itemIds, action.payload.item.id] : [action.payload.item.id]\r\n                            };\r\n                        }\r\n                        return column;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items,\r\n                columns: newColumn,\r\n                userStory: newUserStory\r\n            };\r\n        case UPDATE_COLUMN_ITEM_ORDER:\r\n            return {\r\n                ...state,\r\n                columns: action.payload.columns\r\n            };\r\n        case SELECT_ITEM:\r\n            return {\r\n                ...state,\r\n                selectedItem: action.payload.selectedItem\r\n            };\r\n        case ADD_ITEM_COMMENT:\r\n            newItems = state.items.map((item) => {\r\n                if (item.id === action.payload.itemId) {\r\n                    return {\r\n                        ...item,\r\n                        commentIds: item.commentIds ? [...item.commentIds, action.payload.comment.id] : [action.payload.comment.id]\r\n                    };\r\n                }\r\n                return item;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                comments: [...state.comments, action.payload.comment]\r\n            };\r\n        case DELETE_ITEM:\r\n            newColumn = state.columns.map((column) => {\r\n                itemIds = column.itemIds.filter((id) => id !== action.payload.itemId);\r\n                return {\r\n                    ...column,\r\n                    itemIds\r\n                };\r\n            });\r\n\r\n            newUserStory = state.userStory.map((story) => {\r\n                itemIds = story.itemIds.filter((id) => id !== action.payload.itemId);\r\n                return {\r\n                    ...story,\r\n                    itemIds\r\n                };\r\n            });\r\n\r\n            state.items.splice(\r\n                state.items.findIndex((item) => item.id === action.payload.itemId),\r\n                1\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items,\r\n                columns: newColumn,\r\n                userStory: newUserStory\r\n            };\r\n        case ADD_STORY:\r\n            return {\r\n                ...state,\r\n                userStory: [...state.userStory, action.payload.story],\r\n                userStoryOrder: [...state.userStoryOrder, action.payload.story.id]\r\n            };\r\n        case EDIT_STORY:\r\n            state.userStory.splice(\r\n                state.userStory.findIndex((story) => story.id === action.payload.story.id),\r\n                1,\r\n                action.payload.story\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                userStory: state.userStory\r\n            };\r\n        case UPDATE_STORY_ORDER:\r\n            return {\r\n                ...state,\r\n                userStoryOrder: action.payload.userStoryOrder\r\n            };\r\n        case UPDATE_STORY_ITEM_ORDER:\r\n            return {\r\n                ...state,\r\n                userStory: action.payload.userStory\r\n            };\r\n        case ADD_STORY_COMMENT:\r\n            newUserStory = state.userStory.map((story) => {\r\n                if (story.id === action.payload.storyId) {\r\n                    return {\r\n                        ...story,\r\n                        commentIds: story.commentIds ? [...story.commentIds, action.payload.comment.id] : [action.payload.comment.id]\r\n                    };\r\n                }\r\n                return story;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                userStory: newUserStory,\r\n                comments: [...state.comments, action.payload.comment]\r\n            };\r\n        case DELETE_STORY:\r\n            state.userStory.splice(\r\n                state.userStory.findIndex((story) => story.id === action.payload.storyId),\r\n                1\r\n            );\r\n\r\n            state.userStoryOrder.splice(\r\n                state.userStoryOrder.findIndex((storyId) => storyId === action.payload.storyId),\r\n                1\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                userStory: state.userStory,\r\n                userStoryOrder: state.userStoryOrder\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default kanbanReducer;\r\n"]},"metadata":{},"sourceType":"module"}