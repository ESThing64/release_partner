{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';// material-ui\nimport{TreeView,TreeItem}from'@mui/lab';// assets\nimport ExpandMoreIcon from'@mui/icons-material/ExpandMore';import ChevronRightIcon from'@mui/icons-material/ChevronRight';// ==============================|| UI TREEVIEW - CONTROLLED ||============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ControlledTreeView(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),expanded=_useState2[0],setExpanded=_useState2[1];var handleToggle=function handleToggle(event,nodeIds){setExpanded(nodeIds);};var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];var handleSelect=function handleSelect(event,nodeIds){setSelected(nodeIds);};return/*#__PURE__*/_jsxs(TreeView,{defaultCollapseIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),defaultExpandIcon:/*#__PURE__*/_jsx(ChevronRightIcon,{}),expanded:expanded,selected:selected,onNodeToggle:handleToggle,onNodeSelect:handleSelect,children:[/*#__PURE__*/_jsxs(TreeItem,{nodeId:\"1\",label:\"Applications\",children:[/*#__PURE__*/_jsx(TreeItem,{nodeId:\"2\",label:\"Calendar\"}),/*#__PURE__*/_jsx(TreeItem,{nodeId:\"3\",label:\"Chrome\"}),/*#__PURE__*/_jsx(TreeItem,{nodeId:\"4\",label:\"Webstorm\"})]}),/*#__PURE__*/_jsx(TreeItem,{nodeId:\"5\",label:\"Documents\",children:/*#__PURE__*/_jsx(TreeItem,{nodeId:\"6\",label:\"Material-UI\",children:/*#__PURE__*/_jsxs(TreeItem,{nodeId:\"7\",label:\"src\",children:[/*#__PURE__*/_jsx(TreeItem,{nodeId:\"8\",label:\"index.js\"}),/*#__PURE__*/_jsx(TreeItem,{nodeId:\"9\",label:\"tree-view.js\"})]})})})]});}","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/ui-elements/advance/UITreeview/ControlledTreeView.js"],"names":["useState","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","ControlledTreeView","expanded","setExpanded","handleToggle","event","nodeIds","selected","setSelected","handleSelect"],"mappings":"8KAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA;AACA,OAASC,QAAT,CAAmBC,QAAnB,KAAmC,UAAnC,CAEA;AACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CAEA;wFAEA,cAAe,SAASC,CAAAA,kBAAT,EAA8B,CACzC,cAAgCL,QAAQ,CAAC,EAAD,CAAxC,wCAAOM,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,OAAR,CAAoB,CACrCH,WAAW,CAACG,OAAD,CAAX,CACH,CAFD,CAIA,eAAgCV,QAAQ,CAAC,EAAD,CAAxC,yCAAOW,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAQC,OAAR,CAAoB,CACrCE,WAAW,CAACF,OAAD,CAAX,CACH,CAFD,CAIA,mBACI,MAAC,QAAD,EACI,mBAAmB,cAAE,KAAC,cAAD,IADzB,CAEI,iBAAiB,cAAE,KAAC,gBAAD,IAFvB,CAGI,QAAQ,CAAEJ,QAHd,CAII,QAAQ,CAAEK,QAJd,CAKI,YAAY,CAAEH,YALlB,CAMI,YAAY,CAAEK,YANlB,wBAQI,MAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,cAA3B,wBACI,KAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,UAA3B,EADJ,cAEI,KAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,QAA3B,EAFJ,cAGI,KAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,UAA3B,EAHJ,GARJ,cAaI,KAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,WAA3B,uBACI,KAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,aAA3B,uBACI,MAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,KAA3B,wBACI,KAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,UAA3B,EADJ,cAEI,KAAC,QAAD,EAAU,MAAM,CAAC,GAAjB,CAAqB,KAAK,CAAC,cAA3B,EAFJ,GADJ,EADJ,EAbJ,GADJ,CAwBH","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { TreeView, TreeItem } from '@mui/lab';\r\n\r\n// assets\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n// ==============================|| UI TREEVIEW - CONTROLLED ||============================== //\r\n\r\nexport default function ControlledTreeView() {\r\n    const [expanded, setExpanded] = useState([]);\r\n    const handleToggle = (event, nodeIds) => {\r\n        setExpanded(nodeIds);\r\n    };\r\n\r\n    const [selected, setSelected] = useState([]);\r\n    const handleSelect = (event, nodeIds) => {\r\n        setSelected(nodeIds);\r\n    };\r\n\r\n    return (\r\n        <TreeView\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            expanded={expanded}\r\n            selected={selected}\r\n            onNodeToggle={handleToggle}\r\n            onNodeSelect={handleSelect}\r\n        >\r\n            <TreeItem nodeId=\"1\" label=\"Applications\">\r\n                <TreeItem nodeId=\"2\" label=\"Calendar\" />\r\n                <TreeItem nodeId=\"3\" label=\"Chrome\" />\r\n                <TreeItem nodeId=\"4\" label=\"Webstorm\" />\r\n            </TreeItem>\r\n            <TreeItem nodeId=\"5\" label=\"Documents\">\r\n                <TreeItem nodeId=\"6\" label=\"Material-UI\">\r\n                    <TreeItem nodeId=\"7\" label=\"src\">\r\n                        <TreeItem nodeId=\"8\" label=\"index.js\" />\r\n                        <TreeItem nodeId=\"9\" label=\"tree-view.js\" />\r\n                    </TreeItem>\r\n                </TreeItem>\r\n            </TreeItem>\r\n        </TreeView>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}