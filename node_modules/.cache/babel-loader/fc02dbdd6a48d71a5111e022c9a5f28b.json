{"ast":null,"code":"import _regeneratorRuntime from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,Fragment}from'react';// material-ui\nimport{useTheme}from'@mui/material/styles';import{Button,Divider,Grid,InputAdornment,OutlinedInput,Typography}from'@mui/material';// project imports\nimport UserDetails from'../UserDetails';import UserEdit from'../UserEdit';import ContactCard from'ui-component/cards/ContactCard';import MainCard from'ui-component/cards/MainCard';import axios from'utils/axios';import{gridSpacing}from'store/constant';import User1 from'assets/images/users/avatar-1.png';// assets\nimport{IconSearch}from'@tabler/icons';import AddCircleOutlineOutlinedIcon from'@mui/icons-material/AddCircleOutlineOutlined';// ==============================|| CONTACT CARD ||============================== //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactCardPage=function ContactCardPage(){var theme=useTheme();// get all users details\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var convertData=function convertData(userData){return userData.reduce(function(a,curr){var firstLatter=curr.name[0].toUpperCase();if(Object.prototype.hasOwnProperty.call(a,firstLatter)){a[firstLatter].push(curr);}else{a[firstLatter]=[curr];}return a;},{});};var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/chat/users');case 2:response=_context.sent;setData(convertData(response.data.users));return _context.abrupt(\"return\",response.data.users);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref.apply(this,arguments);};}();useEffect(function(){getData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// edit selected user and modify users data\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var modifyUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(u){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.post('/api/chat/users/modify',u);case 2:getData().then(function(d){if(user){var idx=d.findIndex(function(item){return item.id===user.id;});if(idx>-1)setUser(d[idx]);}});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function modifyUser(_x){return _ref2.apply(this,arguments);};}();// handle new user insert action\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),userDetails=_useState6[0],setUserDetails=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),userEdit=_useState8[0],setUserEdit=_useState8[1];var handleOnAdd=function handleOnAdd(){setUser({name:'',company:'',role:'',work_email:'',personal_email:'',work_phone:'',personal_phone:'',location:'USA',image:User1,status:'I am online',lastMessage:'2h ago',birthdayText:''});setUserDetails(false);setUserEdit(true);};return/*#__PURE__*/_jsx(MainCard,{title:\"Contact Cards\",children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{className:\"block\",item:true,xs:true,zeroMinWidth:true,sx:{display:userDetails||userEdit?{xs:'none',md:'flex'}:'flex'},children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:true,zeroMinWidth:true,children:/*#__PURE__*/_jsx(OutlinedInput,{id:\"input-search-card-style1\",placeholder:\"Search Contact\",fullWidth:true,startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(IconSearch,{stroke:1.5,size:\"1rem\"})})})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",startIcon:/*#__PURE__*/_jsx(AddCircleOutlineOutlinedIcon,{}),onClick:handleOnAdd,children:\"Add\"})}),Object.keys(data).map(function(key,index){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{sx:{borderColor:theme.palette.primary.light,mt:0.625,mb:1.875}}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:\"primary\",sx:{fontSize:'1rem'},children:key.toUpperCase()}),/*#__PURE__*/_jsx(Divider,{sx:{borderColor:theme.palette.primary.light,mt:1.875,mb:0.625}})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",spacing:gridSpacing,children:data[key].map(function(userRow,i){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:4,xl:3,children:/*#__PURE__*/_jsx(ContactCard,{avatar:userRow.avatar,name:userRow.name,role:userRow.role,email:userRow.work_email,contact:userRow.phone,location:userRow.location,onActive:function onActive(){setUser(userRow);setUserDetails(true);setUserEdit(false);}})},i);})})})]},index);})]})}),userDetails&&/*#__PURE__*/_jsx(Grid,{item:true,sx:{width:342,margin:{xs:'0 auto',md:'initial'}},children:/*#__PURE__*/_jsx(UserDetails,{user:user,onEditClick:function onEditClick(){setUserDetails(false);setUserEdit(true);},onClose:function onClose(){setUserDetails(false);setUserEdit(false);}})}),userEdit&&/*#__PURE__*/_jsx(Grid,{item:true,sx:{width:342,margin:{xs:'0 auto',md:'initial'}},children:/*#__PURE__*/_jsx(UserEdit,{user:user,onSave:function onSave(u){if(u.id)setUserDetails(true);setUserEdit(false);modifyUser(u);},onCancel:function onCancel(u){if(u.id)setUserDetails(true);setUserEdit(false);}})})]})});};export default ContactCardPage;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/contact/Card/index.js"],"names":["useState","useEffect","Fragment","useTheme","Button","Divider","Grid","InputAdornment","OutlinedInput","Typography","UserDetails","UserEdit","ContactCard","MainCard","axios","gridSpacing","User1","IconSearch","AddCircleOutlineOutlinedIcon","ContactCardPage","theme","data","setData","convertData","userData","reduce","a","curr","firstLatter","name","toUpperCase","Object","prototype","hasOwnProperty","call","push","getData","get","response","users","user","setUser","modifyUser","u","post","then","d","idx","findIndex","item","id","userDetails","setUserDetails","userEdit","setUserEdit","handleOnAdd","company","role","work_email","personal_email","work_phone","personal_phone","location","image","status","lastMessage","birthdayText","display","xs","md","keys","map","key","index","borderColor","palette","primary","light","mt","mb","fontSize","userRow","i","avatar","phone","width","margin"],"mappings":"ugBAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,QAA9B,KAA8C,OAA9C,CAEA;AACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,IAA1B,CAAgCC,cAAhC,CAAgDC,aAAhD,CAA+DC,UAA/D,KAAiF,eAAjF,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,kCAAlB,CAEA;AACA,OAASC,UAAT,KAA2B,eAA3B,CACA,MAAOC,CAAAA,4BAAP,KAAyC,8CAAzC,CAEA;wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,GAAMC,CAAAA,KAAK,CAAGjB,QAAQ,EAAtB,CAEA;AACA,cAAwBH,QAAQ,CAAC,EAAD,CAAhC,wCAAOqB,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,QAChBA,CAAAA,QAAQ,CAACC,MAAT,CAAgB,SAACC,CAAD,CAAIC,IAAJ,CAAa,CACzB,GAAMC,CAAAA,WAAW,CAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaC,WAAb,EAApB,CACA,GAAIC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,CAAwCE,WAAxC,CAAJ,CAA0D,CACtDF,CAAC,CAACE,WAAD,CAAD,CAAeO,IAAf,CAAoBR,IAApB,EACH,CAFD,IAEO,CACHD,CAAC,CAACE,WAAD,CAAD,CAAiB,CAACD,IAAD,CAAjB,CACH,CACD,MAAOD,CAAAA,CAAP,CACH,CARD,CAQG,EARH,CADgB,EAApB,CAWA,GAAMU,CAAAA,OAAO,0FAAG,sKACWtB,CAAAA,KAAK,CAACuB,GAAN,CAAU,iBAAV,CADX,QACNC,QADM,eAEZhB,OAAO,CAACC,WAAW,CAACe,QAAQ,CAACjB,IAAT,CAAckB,KAAf,CAAZ,CAAP,CAFY,gCAGLD,QAAQ,CAACjB,IAAT,CAAckB,KAHT,wDAAH,kBAAPH,CAAAA,OAAO,0CAAb,CAMAnC,SAAS,CAAC,UAAM,CACZmC,OAAO,GACP;AACH,CAHQ,CAGN,EAHM,CAAT,CAKA;AACA,eAAwBpC,QAAQ,CAAC,EAAD,CAAhC,yCAAOwC,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,UAAU,2FAAG,kBAAOC,CAAP,6IACT7B,CAAAA,KAAK,CAAC8B,IAAN,CAAW,wBAAX,CAAqCD,CAArC,CADS,QAEfP,OAAO,GAAGS,IAAV,CAAe,SAACC,CAAD,CAAO,CAClB,GAAIN,IAAJ,CAAU,CACN,GAAMO,CAAAA,GAAG,CAAGD,CAAC,CAACE,SAAF,CAAY,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYV,IAAI,CAACU,EAA3B,EAAZ,CAAZ,CACA,GAAIH,GAAG,CAAG,CAAC,CAAX,CAAcN,OAAO,CAACK,CAAC,CAACC,GAAD,CAAF,CAAP,CACjB,CACJ,CALD,EAFe,wDAAH,kBAAVL,CAAAA,UAAU,6CAAhB,CAUA;AACA,eAAsC1C,QAAQ,CAAC,KAAD,CAA9C,yCAAOmD,WAAP,eAAoBC,cAApB,eACA,eAAgCpD,QAAQ,CAAC,KAAD,CAAxC,yCAAOqD,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBd,OAAO,CAAC,CACJZ,IAAI,CAAE,EADF,CAEJ2B,OAAO,CAAE,EAFL,CAGJC,IAAI,CAAE,EAHF,CAIJC,UAAU,CAAE,EAJR,CAKJC,cAAc,CAAE,EALZ,CAMJC,UAAU,CAAE,EANR,CAOJC,cAAc,CAAE,EAPZ,CAQJC,QAAQ,CAAE,KARN,CASJC,KAAK,CAAE/C,KATH,CAUJgD,MAAM,CAAE,aAVJ,CAWJC,WAAW,CAAE,QAXT,CAYJC,YAAY,CAAE,EAZV,CAAD,CAAP,CAcAd,cAAc,CAAC,KAAD,CAAd,CACAE,WAAW,CAAC,IAAD,CAAX,CACH,CAjBD,CAmBA,mBACI,KAAC,QAAD,EAAU,KAAK,CAAC,eAAhB,uBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAEvC,WAAzB,wBACI,KAAC,IAAD,EACI,SAAS,CAAC,OADd,CAEI,IAAI,KAFR,CAGI,EAAE,KAHN,CAII,YAAY,KAJhB,CAKI,EAAE,CAAE,CAAEoD,OAAO,CAAEhB,WAAW,EAAIE,QAAf,CAA0B,CAAEe,EAAE,CAAE,MAAN,CAAcC,EAAE,CAAE,MAAlB,CAA1B,CAAuD,MAAlE,CALR,uBAOI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,UAAU,CAAC,QAA3B,CAAoC,OAAO,CAAEtD,WAA7C,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,CAAc,YAAY,KAA1B,uBACI,KAAC,aAAD,EACI,EAAE,CAAC,0BADP,CAEI,WAAW,CAAC,gBAFhB,CAGI,SAAS,KAHb,CAII,cAAc,cACV,KAAC,cAAD,EAAgB,QAAQ,CAAC,OAAzB,uBACI,KAAC,UAAD,EAAY,MAAM,CAAE,GAApB,CAAyB,IAAI,CAAC,MAA9B,EADJ,EALR,EADJ,EADJ,cAaI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,OAAjC,CAAyC,SAAS,cAAE,KAAC,4BAAD,IAApD,CAAsF,OAAO,CAAEwC,WAA/F,iBADJ,EAbJ,CAmBKxB,MAAM,CAACuC,IAAP,CAAYjD,IAAZ,EAAkBkD,GAAlB,CAAsB,SAACC,GAAD,CAAMC,KAAN,qBACnB,MAAC,QAAD,yBACI,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,wBACI,KAAC,OAAD,EAAS,EAAE,CAAE,CAAEC,WAAW,CAAEtD,KAAK,CAACuD,OAAN,CAAcC,OAAd,CAAsBC,KAArC,CAA4CC,EAAE,CAAE,KAAhD,CAAuDC,EAAE,CAAE,KAA3D,CAAb,EADJ,cAEI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,KAAK,CAAC,SAA/B,CAAyC,EAAE,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAA7C,UACKR,GAAG,CAAC1C,WAAJ,EADL,EAFJ,cAKI,KAAC,OAAD,EAAS,EAAE,CAAE,CAAE4C,WAAW,CAAEtD,KAAK,CAACuD,OAAN,CAAcC,OAAd,CAAsBC,KAArC,CAA4CC,EAAE,CAAE,KAAhD,CAAuDC,EAAE,CAAE,KAA3D,CAAb,EALJ,GADJ,cAQI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAEhE,WAAzC,UACKM,IAAI,CAACmD,GAAD,CAAJ,CAAUD,GAAV,CAAc,SAACU,OAAD,CAAUC,CAAV,qBACX,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,CAAiC,EAAE,CAAE,CAArC,uBACI,KAAC,WAAD,EACI,MAAM,CAAED,OAAO,CAACE,MADpB,CAEI,IAAI,CAAEF,OAAO,CAACpD,IAFlB,CAGI,IAAI,CAAEoD,OAAO,CAACxB,IAHlB,CAII,KAAK,CAAEwB,OAAO,CAACvB,UAJnB,CAKI,OAAO,CAAEuB,OAAO,CAACG,KALrB,CAMI,QAAQ,CAAEH,OAAO,CAACnB,QANtB,CAOI,QAAQ,CAAE,mBAAM,CACZrB,OAAO,CAACwC,OAAD,CAAP,CACA7B,cAAc,CAAC,IAAD,CAAd,CACAE,WAAW,CAAC,KAAD,CAAX,CACH,CAXL,EADJ,EAA6C4B,CAA7C,CADW,EAAd,CADL,EADJ,EARJ,GAAeT,KAAf,CADmB,EAAtB,CAnBL,GAPJ,EADJ,CA8DKtB,WAAW,eACR,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAEkC,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,CAAElB,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,SAApB,CAAtB,CAAf,uBACI,KAAC,WAAD,EACI,IAAI,CAAE7B,IADV,CAEI,WAAW,CAAE,sBAAM,CACfY,cAAc,CAAC,KAAD,CAAd,CACAE,WAAW,CAAC,IAAD,CAAX,CACH,CALL,CAMI,OAAO,CAAE,kBAAM,CACXF,cAAc,CAAC,KAAD,CAAd,CACAE,WAAW,CAAC,KAAD,CAAX,CACH,CATL,EADJ,EA/DR,CA8EKD,QAAQ,eACL,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAEgC,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,CAAElB,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,SAApB,CAAtB,CAAf,uBACI,KAAC,QAAD,EACI,IAAI,CAAE7B,IADV,CAEI,MAAM,CAAE,gBAACG,CAAD,CAAO,CACX,GAAIA,CAAC,CAACO,EAAN,CAAUE,cAAc,CAAC,IAAD,CAAd,CACVE,WAAW,CAAC,KAAD,CAAX,CACAZ,UAAU,CAACC,CAAD,CAAV,CACH,CANL,CAOI,QAAQ,CAAE,kBAACA,CAAD,CAAO,CACb,GAAIA,CAAC,CAACO,EAAN,CAAUE,cAAc,CAAC,IAAD,CAAd,CACVE,WAAW,CAAC,KAAD,CAAX,CACH,CAVL,EADJ,EA/ER,GADJ,EADJ,CAmGH,CAhKD,CAkKA,cAAenC,CAAAA,eAAf","sourcesContent":["import { useState, useEffect, Fragment } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Divider, Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport UserDetails from '../UserDetails';\r\nimport UserEdit from '../UserEdit';\r\nimport ContactCard from 'ui-component/cards/ContactCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\nimport User1 from 'assets/images/users/avatar-1.png';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\r\n\r\n// ==============================|| CONTACT CARD ||============================== //\r\n\r\nconst ContactCardPage = () => {\r\n    const theme = useTheme();\r\n\r\n    // get all users details\r\n    const [data, setData] = useState({});\r\n    const convertData = (userData) =>\r\n        userData.reduce((a, curr) => {\r\n            const firstLatter = curr.name[0].toUpperCase();\r\n            if (Object.prototype.hasOwnProperty.call(a, firstLatter)) {\r\n                a[firstLatter].push(curr);\r\n            } else {\r\n                a[firstLatter] = [curr];\r\n            }\r\n            return a;\r\n        }, {});\r\n\r\n    const getData = async () => {\r\n        const response = await axios.get('/api/chat/users');\r\n        setData(convertData(response.data.users));\r\n        return response.data.users;\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // edit selected user and modify users data\r\n    const [user, setUser] = useState({});\r\n    const modifyUser = async (u) => {\r\n        await axios.post('/api/chat/users/modify', u);\r\n        getData().then((d) => {\r\n            if (user) {\r\n                const idx = d.findIndex((item) => item.id === user.id);\r\n                if (idx > -1) setUser(d[idx]);\r\n            }\r\n        });\r\n    };\r\n\r\n    // handle new user insert action\r\n    const [userDetails, setUserDetails] = useState(false);\r\n    const [userEdit, setUserEdit] = useState(false);\r\n    const handleOnAdd = () => {\r\n        setUser({\r\n            name: '',\r\n            company: '',\r\n            role: '',\r\n            work_email: '',\r\n            personal_email: '',\r\n            work_phone: '',\r\n            personal_phone: '',\r\n            location: 'USA',\r\n            image: User1,\r\n            status: 'I am online',\r\n            lastMessage: '2h ago',\r\n            birthdayText: ''\r\n        });\r\n        setUserDetails(false);\r\n        setUserEdit(true);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Contact Cards\">\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid\r\n                    className=\"block\"\r\n                    item\r\n                    xs\r\n                    zeroMinWidth\r\n                    sx={{ display: userDetails || userEdit ? { xs: 'none', md: 'flex' } : 'flex' }}\r\n                >\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <OutlinedInput\r\n                                id=\"input-search-card-style1\"\r\n                                placeholder=\"Search Contact\"\r\n                                fullWidth\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" size=\"large\" startIcon={<AddCircleOutlineOutlinedIcon />} onClick={handleOnAdd}>\r\n                                Add\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        {Object.keys(data).map((key, index) => (\r\n                            <Fragment key={index}>\r\n                                <Grid item xs={12}>\r\n                                    <Divider sx={{ borderColor: theme.palette.primary.light, mt: 0.625, mb: 1.875 }} />\r\n                                    <Typography variant=\"h4\" color=\"primary\" sx={{ fontSize: '1rem' }}>\r\n                                        {key.toUpperCase()}\r\n                                    </Typography>\r\n                                    <Divider sx={{ borderColor: theme.palette.primary.light, mt: 1.875, mb: 0.625 }} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                                        {data[key].map((userRow, i) => (\r\n                                            <Grid item xs={12} md={6} lg={4} xl={3} key={i}>\r\n                                                <ContactCard\r\n                                                    avatar={userRow.avatar}\r\n                                                    name={userRow.name}\r\n                                                    role={userRow.role}\r\n                                                    email={userRow.work_email}\r\n                                                    contact={userRow.phone}\r\n                                                    location={userRow.location}\r\n                                                    onActive={() => {\r\n                                                        setUser(userRow);\r\n                                                        setUserDetails(true);\r\n                                                        setUserEdit(false);\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {userDetails && (\r\n                    <Grid item sx={{ width: 342, margin: { xs: '0 auto', md: 'initial' } }}>\r\n                        <UserDetails\r\n                            user={user}\r\n                            onEditClick={() => {\r\n                                setUserDetails(false);\r\n                                setUserEdit(true);\r\n                            }}\r\n                            onClose={() => {\r\n                                setUserDetails(false);\r\n                                setUserEdit(false);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n\r\n                {userEdit && (\r\n                    <Grid item sx={{ width: 342, margin: { xs: '0 auto', md: 'initial' } }}>\r\n                        <UserEdit\r\n                            user={user}\r\n                            onSave={(u) => {\r\n                                if (u.id) setUserDetails(true);\r\n                                setUserEdit(false);\r\n                                modifyUser(u);\r\n                            }}\r\n                            onCancel={(u) => {\r\n                                if (u.id) setUserDetails(true);\r\n                                setUserEdit(false);\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ContactCardPage;\r\n"]},"metadata":{},"sourceType":"module"}