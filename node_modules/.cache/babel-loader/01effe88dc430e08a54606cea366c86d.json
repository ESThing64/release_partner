{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{forwardRef,useState}from'react';// material-ui\nimport{useTheme}from'@mui/material/styles';import{Button,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Slide,Typography}from'@mui/material';// animation\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Transition=/*#__PURE__*/forwardRef(function(props,ref){return/*#__PURE__*/_jsx(Slide,_objectSpread({direction:\"up\",ref:ref},props));});// ===============================|| UI DIALOG - SLIDE ANIMATION ||=============================== //\nexport default function AlertDialogSlide(){var theme=useTheme();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleClickOpen,children:\"Slide in alert dialog\"}),/*#__PURE__*/_jsxs(Dialog,{open:open,TransitionComponent:Transition,keepMounted:true,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-slide-title1\",\"aria-describedby\":\"alert-dialog-slide-description1\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-slide-title1\",children:\"Use Google's location service?\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-slide-description1\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",component:\"span\",children:\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"})})}),/*#__PURE__*/_jsxs(DialogActions,{sx:{pr:2.5},children:[/*#__PURE__*/_jsx(Button,{sx:{color:theme.palette.error.dark,borderColor:theme.palette.error.dark},onClick:handleClose,color:\"secondary\",children:\"Disagree\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",onClick:handleClose,children:\"Agree\"})]})]})]});}","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/ui-elements/advance/UIDialog/AlertDialogSlide.js"],"names":["forwardRef","useState","useTheme","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Typography","Transition","props","ref","AlertDialogSlide","theme","open","setOpen","handleClickOpen","handleClose","pr","color","palette","error","dark","borderColor"],"mappings":"2VAAA,OAASA,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CAEA;AACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,aAAzB,CAAwCC,aAAxC,CAAuDC,iBAAvD,CAA0EC,WAA1E,CAAuFC,KAAvF,CAA8FC,UAA9F,KAAgH,eAAhH,CAEA;6IACA,GAAMC,CAAAA,UAAU,cAAGX,UAAU,CAAC,SAACY,KAAD,CAAQC,GAAR,qBAAgB,KAAC,KAAD,gBAAO,SAAS,CAAC,IAAjB,CAAsB,GAAG,CAAEA,GAA3B,EAAoCD,KAApC,EAAhB,EAAD,CAA7B,CAEA;AAEA,cAAe,SAASE,CAAAA,gBAAT,EAA4B,CACvC,GAAMC,CAAAA,KAAK,CAAGb,QAAQ,EAAtB,CACA,cAAwBD,QAAQ,CAAC,KAAD,CAAhC,wCAAOe,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BD,OAAO,CAAC,IAAD,CAAP,CACH,CAFD,CAIA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBF,OAAO,CAAC,KAAD,CAAP,CACH,CAFD,CAIA,mBACI,wCACI,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,OAAO,CAAEC,eAApC,mCADJ,cAII,MAAC,MAAD,EACI,IAAI,CAAEF,IADV,CAEI,mBAAmB,CAAEL,UAFzB,CAGI,WAAW,KAHf,CAII,OAAO,CAAEQ,WAJb,CAKI,kBAAgB,2BALpB,CAMI,mBAAiB,iCANrB,wBAQI,KAAC,WAAD,EAAa,EAAE,CAAC,2BAAhB,4CARJ,cASI,KAAC,aAAD,wBACI,KAAC,iBAAD,EAAmB,EAAE,CAAC,iCAAtB,uBACI,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAC,MAAtC,2IADJ,EADJ,EATJ,cAiBI,MAAC,aAAD,EAAe,EAAE,CAAE,CAAEC,EAAE,CAAE,GAAN,CAAnB,wBACI,KAAC,MAAD,EACI,EAAE,CAAE,CAAEC,KAAK,CAAEN,KAAK,CAACO,OAAN,CAAcC,KAAd,CAAoBC,IAA7B,CAAmCC,WAAW,CAAEV,KAAK,CAACO,OAAN,CAAcC,KAAd,CAAoBC,IAApE,CADR,CAEI,OAAO,CAAEL,WAFb,CAGI,KAAK,CAAC,WAHV,sBADJ,cAQI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,OAAjC,CAAyC,OAAO,CAAEA,WAAlD,mBARJ,GAjBJ,GAJJ,GADJ,CAqCH","sourcesContent":["import { forwardRef, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide, Typography } from '@mui/material';\r\n\r\n// animation\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\n// ===============================|| UI DIALOG - SLIDE ANIMATION ||=============================== //\r\n\r\nexport default function AlertDialogSlide() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Slide in alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title1\"\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title1\">Use Google&apos;s location service?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description1\">\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n                            are running.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button\r\n                        sx={{ color: theme.palette.error.dark, borderColor: theme.palette.error.dark }}\r\n                        onClick={handleClose}\r\n                        color=\"secondary\"\r\n                    >\r\n                        Disagree\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}