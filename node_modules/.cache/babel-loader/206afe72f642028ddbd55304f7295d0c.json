{"ast":null,"code":"import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useDispatch}from'react-redux';// material-ui\nimport{Autocomplete,Box,Button,CardMedia,FormControl,FormControlLabel,Grid,MenuItem,Radio,RadioGroup,Select,TextField,Typography}from'@mui/material';import AdapterDateFns from'@mui/lab/AdapterDateFns';import LocalizationProvider from'@mui/lab/LocalizationProvider';import DesktopDatePicker from'@mui/lab/DesktopDatePicker';// third-party\nimport*as yup from'yup';import{useFormik}from'formik';// project imports\nimport AnimateButton from'ui-component/extended/AnimateButton';import{EDIT_ITEM,SNACKBAR_OPEN}from'store/actions';// assets\nimport imgMain from'assets/images/profile/profile-back-1.png';import AddRoundedIcon from'@mui/icons-material/AddRounded';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var avatarImage=require.context('assets/images/users',true);var validationSchema=yup.object({title:yup.string().required('Task title is required'),dueDate:yup.date()});// ==============================|| KANBAN BOARD - ITEM EDIT ||============================== //\nvar EditItem=function EditItem(_ref){var item=_ref.item,profiles=_ref.profiles,userStory=_ref.userStory,columns=_ref.columns,handleDrawerOpen=_ref.handleDrawerOpen;var dispatch=useDispatch();var itemUserStory=userStory.filter(function(story){return story.itemIds.filter(function(itemId){return itemId===item.id;})[0];})[0];var itemColumn=columns.filter(function(column){return column.itemIds.filter(function(itemId){return itemId===item.id;})[0];})[0];var formik=useFormik({enableReinitialize:true,initialValues:{id:item.id,title:item.title,assign:item.assign,priority:item.priority,dueDate:item.dueDate?new Date(item.dueDate):new Date(),description:item.description,commentIds:item.commentIds,image:item.image,storyId:itemUserStory?itemUserStory.id:'',columnId:itemColumn?itemColumn.id:''},validationSchema:validationSchema,onSubmit:function onSubmit(values){dispatch({type:EDIT_ITEM,payload:{item:{id:values.id,title:values.title,assign:values.assign,priority:values.priority,dueDate:values.dueDate?new Date(values.dueDate):new Date(),description:values.description,commentIds:values.commentIds,image:values.image},storyId:values.storyId,columnId:values.columnId}});dispatch({type:SNACKBAR_OPEN,open:true,message:'Submit Success',variant:'alert',alertSeverity:'success'});handleDrawerOpen();}});return/*#__PURE__*/_jsx(\"form\",{onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsx(LocalizationProvider,{dateAdapter:AdapterDateFns,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"title\",name:\"title\",label:\"Title\",defaultValue:formik.values.title,onChange:formik.handleChange,error:formik.touched.title&&Boolean(formik.errors.title),helperText:formik.touched.title&&formik.errors.title})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Assign to:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"flex-start\",children:/*#__PURE__*/_jsx(Autocomplete,{id:\"assign\",value:profiles.find(function(profile){return profile.id===formik.values.assign;}),onChange:function onChange(event,value){formik.setFieldValue('assign',value===null||value===void 0?void 0:value.id);},options:profiles,fullWidth:true,autoHighlight:true,getOptionLabel:function getOptionLabel(option){return option.name;},renderOption:function renderOption(props,option){return/*#__PURE__*/_jsxs(Box,_objectSpread(_objectSpread({component:\"li\",sx:{'& > img':{mr:2,flexShrink:0}}},props),{},{children:[/*#__PURE__*/_jsx(\"img\",{loading:\"lazy\",width:\"20\",src:avatarImage(\"./\".concat(option.avatar)).default,alt:\"\"}),option.name]}));},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{name:\"assign\",label:\"Choose a assignee\",inputProps:_objectSpread(_objectSpread({},params.inputProps),{},{autoComplete:'new-password'// disable autocomplete and autofill\n})}));}})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Prioritize:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsxs(RadioGroup,{row:true,\"aria-label\":\"color\",value:formik.values.priority,onChange:formik.handleChange,name:\"priority\",id:\"priority\",children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"low\",control:/*#__PURE__*/_jsx(Radio,{color:\"primary\",sx:{color:'primary.main'}}),label:\"Low\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"medium\",control:/*#__PURE__*/_jsx(Radio,{color:\"warning\",sx:{color:'warning.main'}}),label:\"Medium\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"high\",control:/*#__PURE__*/_jsx(Radio,{color:\"error\",sx:{color:'error.main'}}),label:\"High\"})]})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Due date:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsx(DesktopDatePicker,{label:\"Due Date\",value:formik.values.dueDate,inputFormat:\"dd/MM/yyyy\",onChange:function onChange(date){formik.setFieldValue('dueDate',date);},renderInput:function renderInput(props){return/*#__PURE__*/_jsx(TextField,_objectSpread({fullWidth:true},props));}})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Description:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"description\",name:\"description\",multiline:true,rows:3,defaultValue:formik.values.description,onChange:formik.handleChange,error:formik.touched.description&&Boolean(formik.errors.description),helperText:formik.touched.description&&formik.errors.description})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"User Story:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsx(FormControl,{fullWidth:true,children:/*#__PURE__*/_jsx(Select,{id:\"storyId\",name:\"storyId\",displayEmpty:true,value:formik.values.storyId,onChange:formik.handleChange,inputProps:{'aria-label':'Without label'},children:userStory.map(function(story,index){return/*#__PURE__*/_jsxs(MenuItem,{value:story.id,children:[story.id,\" - \",story.title]},index);})})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"State:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsx(FormControl,{fullWidth:true,children:/*#__PURE__*/_jsx(Select,{id:\"columnId\",name:\"columnId\",displayEmpty:true,value:formik.values.columnId,onChange:formik.handleChange,inputProps:{'aria-label':'Without label'},children:columns.map(function(column,index){return/*#__PURE__*/_jsx(MenuItem,{value:column.id,children:column.title},index);})})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Attachments:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(CardMedia,{component:\"img\",image:imgMain,sx:{width:60,height:60,borderRadius:1},title:\"Slider5 image\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"large\",sx:{p:2},children:/*#__PURE__*/_jsx(AddRoundedIcon,{})})})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(AnimateButton,{children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",type:\"submit\",children:\"Save\"})})})]})})});};export default EditItem;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/kanban/Board/EditItem.js"],"names":["useDispatch","Autocomplete","Box","Button","CardMedia","FormControl","FormControlLabel","Grid","MenuItem","Radio","RadioGroup","Select","TextField","Typography","AdapterDateFns","LocalizationProvider","DesktopDatePicker","yup","useFormik","AnimateButton","EDIT_ITEM","SNACKBAR_OPEN","imgMain","AddRoundedIcon","avatarImage","require","context","validationSchema","object","title","string","required","dueDate","date","EditItem","item","profiles","userStory","columns","handleDrawerOpen","dispatch","itemUserStory","filter","story","itemIds","itemId","id","itemColumn","column","formik","enableReinitialize","initialValues","assign","priority","Date","description","commentIds","image","storyId","columnId","onSubmit","values","type","payload","open","message","variant","alertSeverity","handleSubmit","handleChange","touched","Boolean","errors","find","profile","event","value","setFieldValue","option","name","props","mr","flexShrink","avatar","default","params","inputProps","autoComplete","color","map","index","width","height","borderRadius","p"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport {\r\n    Autocomplete,\r\n    Box,\r\n    Button,\r\n    CardMedia,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    MenuItem,\r\n    Radio,\r\n    RadioGroup,\r\n    Select,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\r\n\r\n// third-party\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { EDIT_ITEM, SNACKBAR_OPEN } from 'store/actions';\r\n\r\n// assets\r\nimport imgMain from 'assets/images/profile/profile-back-1.png';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\n\r\nconst avatarImage = require.context('assets/images/users', true);\r\nconst validationSchema = yup.object({\r\n    title: yup.string().required('Task title is required'),\r\n    dueDate: yup.date()\r\n});\r\n\r\n// ==============================|| KANBAN BOARD - ITEM EDIT ||============================== //\r\n\r\nconst EditItem = ({ item, profiles, userStory, columns, handleDrawerOpen }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const itemUserStory = userStory.filter((story) => story.itemIds.filter((itemId) => itemId === item.id)[0])[0];\r\n    const itemColumn = columns.filter((column) => column.itemIds.filter((itemId) => itemId === item.id)[0])[0];\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            id: item.id,\r\n            title: item.title,\r\n            assign: item.assign,\r\n            priority: item.priority,\r\n            dueDate: item.dueDate ? new Date(item.dueDate) : new Date(),\r\n            description: item.description,\r\n            commentIds: item.commentIds,\r\n            image: item.image,\r\n            storyId: itemUserStory ? itemUserStory.id : '',\r\n            columnId: itemColumn ? itemColumn.id : ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            dispatch({\r\n                type: EDIT_ITEM,\r\n                payload: {\r\n                    item: {\r\n                        id: values.id,\r\n                        title: values.title,\r\n                        assign: values.assign,\r\n                        priority: values.priority,\r\n                        dueDate: values.dueDate ? new Date(values.dueDate) : new Date(),\r\n                        description: values.description,\r\n                        commentIds: values.commentIds,\r\n                        image: values.image\r\n                    },\r\n                    storyId: values.storyId,\r\n                    columnId: values.columnId\r\n                }\r\n            });\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n            handleDrawerOpen();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            label=\"Title\"\r\n                            defaultValue={formik.values.title}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.title && Boolean(formik.errors.title)}\r\n                            helperText={formik.touched.title && formik.errors.title}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Assign to:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <Grid container justifyContent=\"flex-start\">\r\n                                    <Autocomplete\r\n                                        id=\"assign\"\r\n                                        value={profiles.find((profile) => profile.id === formik.values.assign)}\r\n                                        onChange={(event, value) => {\r\n                                            formik.setFieldValue('assign', value?.id);\r\n                                        }}\r\n                                        options={profiles}\r\n                                        fullWidth\r\n                                        autoHighlight\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        renderOption={(props, option) => (\r\n                                            <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                                                <img loading=\"lazy\" width=\"20\" src={avatarImage(`./${option.avatar}`).default} alt=\"\" />\r\n                                                {option.name}\r\n                                            </Box>\r\n                                        )}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                {...params}\r\n                                                name=\"assign\"\r\n                                                label=\"Choose a assignee\"\r\n                                                inputProps={{\r\n                                                    ...params.inputProps,\r\n                                                    autoComplete: 'new-password' // disable autocomplete and autofill\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Prioritize:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <FormControl>\r\n                                    <RadioGroup\r\n                                        row\r\n                                        aria-label=\"color\"\r\n                                        value={formik.values.priority}\r\n                                        onChange={formik.handleChange}\r\n                                        name=\"priority\"\r\n                                        id=\"priority\"\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value=\"low\"\r\n                                            control={<Radio color=\"primary\" sx={{ color: 'primary.main' }} />}\r\n                                            label=\"Low\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"medium\"\r\n                                            control={<Radio color=\"warning\" sx={{ color: 'warning.main' }} />}\r\n                                            label=\"Medium\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"high\"\r\n                                            control={<Radio color=\"error\" sx={{ color: 'error.main' }} />}\r\n                                            label=\"High\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Due date:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <DesktopDatePicker\r\n                                    label=\"Due Date\"\r\n                                    value={formik.values.dueDate}\r\n                                    inputFormat=\"dd/MM/yyyy\"\r\n                                    onChange={(date) => {\r\n                                        formik.setFieldValue('dueDate', date);\r\n                                    }}\r\n                                    renderInput={(props) => <TextField fullWidth {...props} />}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Description:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"description\"\r\n                                    name=\"description\"\r\n                                    multiline\r\n                                    rows={3}\r\n                                    defaultValue={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">User Story:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <FormControl fullWidth>\r\n                                    <Select\r\n                                        id=\"storyId\"\r\n                                        name=\"storyId\"\r\n                                        displayEmpty\r\n                                        value={formik.values.storyId}\r\n                                        onChange={formik.handleChange}\r\n                                        inputProps={{ 'aria-label': 'Without label' }}\r\n                                    >\r\n                                        {userStory.map((story, index) => (\r\n                                            <MenuItem key={index} value={story.id}>\r\n                                                {story.id} - {story.title}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">State:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <FormControl fullWidth>\r\n                                    <Select\r\n                                        id=\"columnId\"\r\n                                        name=\"columnId\"\r\n                                        displayEmpty\r\n                                        value={formik.values.columnId}\r\n                                        onChange={formik.handleChange}\r\n                                        inputProps={{ 'aria-label': 'Without label' }}\r\n                                    >\r\n                                        {columns.map((column, index) => (\r\n                                            <MenuItem key={index} value={column.id}>\r\n                                                {column.title}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" spacing={2}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Typography variant=\"subtitle1\">Attachments:</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <Grid container alignItems=\"center\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            image={imgMain}\r\n                                            sx={{ width: 60, height: 60, borderRadius: 1 }}\r\n                                            title=\"Slider5 image\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button variant=\"outlined\" size=\"large\" sx={{ p: 2 }}>\r\n                                            <AddRoundedIcon />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <AnimateButton>\r\n                            <Button fullWidth variant=\"contained\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </LocalizationProvider>\r\n        </form>\r\n    );\r\n};\r\n\r\nEditItem.propTypes = {\r\n    item: PropTypes.object,\r\n    profiles: PropTypes.array,\r\n    userStory: PropTypes.array,\r\n    columns: PropTypes.array,\r\n    handleDrawerOpen: PropTypes.func\r\n};\r\n\r\nexport default EditItem;\r\n"]},"metadata":{},"sourceType":"module"}