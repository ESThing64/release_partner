{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{Box,Button,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,FormControl,FormControlLabel,InputLabel,MenuItem,Select,Switch}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MaxWidthDialog(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),fullWidth=_useState4[0],setFullWidth=_useState4[1];var _useState5=useState('sm'),_useState6=_slicedToArray(_useState5,2),maxWidth=_useState6[0],setMaxWidth=_useState6[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleMaxWidthChange=function handleMaxWidthChange(event){setMaxWidth(// @ts-expect-error autofill of arbitrary value is not handled.\nevent.target.value);};var handleFullWidthChange=function handleFullWidthChange(event){setFullWidth(event.target.checked);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleClickOpen,children:\"Open max-width dialog\"}),/*#__PURE__*/_jsxs(Dialog,{fullWidth:fullWidth,maxWidth:maxWidth,open:open,onClose:handleClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Optional sizes\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"You can set my maximum width and whether to adapt or not.\"}),/*#__PURE__*/_jsxs(Box,{noValidate:true,component:\"form\",sx:{display:'flex',flexDirection:'column',m:'auto',width:'fit-content'},children:[/*#__PURE__*/_jsxs(FormControl,{sx:{mt:2,minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"max-width\",children:\"maxWidth\"}),/*#__PURE__*/_jsxs(Select,{autoFocus:true,value:maxWidth,onChange:handleMaxWidthChange,label:\"maxWidth\",inputProps:{name:'max-width',id:'max-width'},children:[/*#__PURE__*/_jsx(MenuItem,{value:false,children:\"false\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"xs\",children:\"xs\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"sm\",children:\"sm\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"md\",children:\"md\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"lg\",children:\"lg\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"xl\",children:\"xl\"})]})]}),/*#__PURE__*/_jsx(FormControlLabel,{sx:{mt:1},control:/*#__PURE__*/_jsx(Switch,{checked:fullWidth,onChange:handleFullWidthChange}),label:\"Full width\"})]})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:\"Close\"})})]})]});}","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/ui-elements/advance/UIDialog/MaxWidthDialog.js"],"names":["useState","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","MaxWidthDialog","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","display","flexDirection","m","width","mt","minWidth","name","id"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormControlLabel,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Switch\r\n} from '@mui/material';\r\n\r\nexport default function MaxWidthDialog() {\r\n    const [open, setOpen] = useState(false);\r\n    const [fullWidth, setFullWidth] = useState(true);\r\n    const [maxWidth, setMaxWidth] = useState('sm');\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleMaxWidthChange = (event) => {\r\n        setMaxWidth(\r\n            // @ts-expect-error autofill of arbitrary value is not handled.\r\n            event.target.value\r\n        );\r\n    };\r\n\r\n    const handleFullWidthChange = (event) => {\r\n        setFullWidth(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open max-width dialog\r\n            </Button>\r\n            <Dialog fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose}>\r\n                <DialogTitle>Optional sizes</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>You can set my maximum width and whether to adapt or not.</DialogContentText>\r\n                    <Box\r\n                        noValidate\r\n                        component=\"form\"\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            m: 'auto',\r\n                            width: 'fit-content'\r\n                        }}\r\n                    >\r\n                        <FormControl sx={{ mt: 2, minWidth: 120 }}>\r\n                            <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                            <Select\r\n                                autoFocus\r\n                                value={maxWidth}\r\n                                onChange={handleMaxWidthChange}\r\n                                label=\"maxWidth\"\r\n                                inputProps={{\r\n                                    name: 'max-width',\r\n                                    id: 'max-width'\r\n                                }}\r\n                            >\r\n                                <MenuItem value={false}>false</MenuItem>\r\n                                <MenuItem value=\"xs\">xs</MenuItem>\r\n                                <MenuItem value=\"sm\">sm</MenuItem>\r\n                                <MenuItem value=\"md\">md</MenuItem>\r\n                                <MenuItem value=\"lg\">lg</MenuItem>\r\n                                <MenuItem value=\"xl\">xl</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControlLabel\r\n                            sx={{ mt: 1 }}\r\n                            control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n                            label=\"Full width\"\r\n                        />\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}