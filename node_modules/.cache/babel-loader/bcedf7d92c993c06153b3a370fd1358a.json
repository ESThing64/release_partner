{"ast":null,"code":"import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useEffect,useReducer}from'react';// third-party\nimport firebase from'firebase/app';import'firebase/auth';// action - state management\nimport{LOGIN,LOGOUT}from'store/actions';import accountReducer from'store/accountReducer';// project imports\nimport Loader from'ui-component/Loader';import config from'config';// firebase initialize\nimport{jsx as _jsx}from\"react/jsx-runtime\";if(!firebase.apps.length){firebase.initializeApp(config.firebase);}// const\nvar initialState={isLoggedIn:false,isInitialized:false,user:null};// ==============================|| FIREBASE CONTEXT & PROVIDER ||============================== //\nvar FirebaseContext=/*#__PURE__*/createContext(null);export var FirebaseProvider=function FirebaseProvider(_ref){var children=_ref.children;var _useReducer=useReducer(accountReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){return firebase.auth().onAuthStateChanged(function(user){if(user){dispatch({type:LOGIN,payload:{isLoggedIn:true,user:{id:user.uid,email:user.email,name:user.displayName||'Betty'}}});}else{dispatch({type:LOGOUT});}});},// eslint-disable-next-line react-hooks/exhaustive-deps\n[dispatch]);var firebaseEmailPasswordSignIn=function firebaseEmailPasswordSignIn(email,password){return firebase.auth().signInWithEmailAndPassword(email,password);};var firebaseGoogleSignIn=function firebaseGoogleSignIn(){var provider=new firebase.auth.GoogleAuthProvider();return firebase.auth().signInWithPopup(provider);};var firebaseRegister=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",firebase.auth().createUserWithEmailAndPassword(email,password));case 1:case\"end\":return _context.stop();}}},_callee);}));return function firebaseRegister(_x,_x2){return _ref2.apply(this,arguments);};}();var logout=function logout(){return firebase.auth().signOut();};var resetPassword=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return firebase.auth().sendPasswordResetEmail(email);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function resetPassword(_x3){return _ref3.apply(this,arguments);};}();var updateProfile=function updateProfile(){};if(state.isInitialized!==undefined&&!state.isInitialized){return/*#__PURE__*/_jsx(Loader,{});}return/*#__PURE__*/_jsx(FirebaseContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{firebaseRegister:firebaseRegister,firebaseEmailPasswordSignIn:firebaseEmailPasswordSignIn,login:function login(){},firebaseGoogleSignIn:firebaseGoogleSignIn,logout:logout,resetPassword:resetPassword,updateProfile:updateProfile}),children:children});};export default FirebaseContext;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/contexts/FirebaseContext.js"],"names":["createContext","useEffect","useReducer","firebase","LOGIN","LOGOUT","accountReducer","Loader","config","apps","length","initializeApp","initialState","isLoggedIn","isInitialized","user","FirebaseContext","FirebaseProvider","children","state","dispatch","auth","onAuthStateChanged","type","payload","id","uid","email","name","displayName","firebaseEmailPasswordSignIn","password","signInWithEmailAndPassword","firebaseGoogleSignIn","provider","GoogleAuthProvider","signInWithPopup","firebaseRegister","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateProfile","undefined","login"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { createContext, useEffect, useReducer } from 'react';\r\n\r\n// third-party\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n// action - state management\r\nimport { LOGIN, LOGOUT } from 'store/actions';\r\nimport accountReducer from 'store/accountReducer';\r\n\r\n// project imports\r\nimport Loader from 'ui-component/Loader';\r\nimport config from 'config';\r\n\r\n// firebase initialize\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config.firebase);\r\n}\r\n\r\n// const\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    user: null\r\n};\r\n\r\n// ==============================|| FIREBASE CONTEXT & PROVIDER ||============================== //\r\n\r\nconst FirebaseContext = createContext(null);\r\n\r\nexport const FirebaseProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(accountReducer, initialState);\r\n\r\n    useEffect(\r\n        () =>\r\n            firebase.auth().onAuthStateChanged((user) => {\r\n                if (user) {\r\n                    dispatch({\r\n                        type: LOGIN,\r\n                        payload: {\r\n                            isLoggedIn: true,\r\n                            user: {\r\n                                id: user.uid,\r\n                                email: user.email,\r\n                                name: user.displayName || 'Betty'\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: LOGOUT\r\n                    });\r\n                }\r\n            }),\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [dispatch]\r\n    );\r\n\r\n    const firebaseEmailPasswordSignIn = (email, password) => firebase.auth().signInWithEmailAndPassword(email, password);\r\n\r\n    const firebaseGoogleSignIn = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        return firebase.auth().signInWithPopup(provider);\r\n    };\r\n\r\n    const firebaseRegister = async (email, password) => firebase.auth().createUserWithEmailAndPassword(email, password);\r\n\r\n    const logout = () => firebase.auth().signOut();\r\n\r\n    const resetPassword = async (email) => {\r\n        await firebase.auth().sendPasswordResetEmail(email);\r\n    };\r\n\r\n    const updateProfile = () => {};\r\n    if (state.isInitialized !== undefined && !state.isInitialized) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <FirebaseContext.Provider\r\n            value={{\r\n                ...state,\r\n                firebaseRegister,\r\n                firebaseEmailPasswordSignIn,\r\n                login: () => {},\r\n                firebaseGoogleSignIn,\r\n                logout,\r\n                resetPassword,\r\n                updateProfile\r\n            }}\r\n        >\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    );\r\n};\r\n\r\nFirebaseProvider.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default FirebaseContext;\r\n"]},"metadata":{},"sourceType":"module"}