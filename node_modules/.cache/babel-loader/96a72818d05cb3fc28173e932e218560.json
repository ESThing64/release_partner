{"ast":null,"code":"import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"user\",\"onCancel\",\"onSave\"];import{cloneElement,useEffect,useState}from'react';// material-ui\nimport{useTheme}from'@mui/material/styles';import{Autocomplete,Avatar,Button,Divider,FormControl,Grid,IconButton,InputAdornment,InputLabel,OutlinedInput,TextField,Typography,useScrollTrigger}from'@mui/material';// third-party\nimport PerfectScrollbar from'react-perfect-scrollbar';// project imports\nimport SubCard from'ui-component/cards/SubCard';import{gridSpacing}from'store/constant';import User1 from'assets/images/users/avatar-1.png';// assets\nimport HighlightOffTwoToneIcon from'@mui/icons-material/HighlightOffTwoTone';import BusinessTwoToneIcon from'@mui/icons-material/BusinessTwoTone';import WorkTwoToneIcon from'@mui/icons-material/WorkTwoTone';import MailTwoToneIcon from'@mui/icons-material/MailTwoTone';import CallTwoToneIcon from'@mui/icons-material/CallTwoTone';import UploadTwoToneIcon from'@mui/icons-material/UploadTwoTone';import ControlPointIcon from'@mui/icons-material/ControlPoint';import TodayTwoToneIcon from'@mui/icons-material/TodayTwoTone';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var avatarImage=require.context('assets/images/users',true);var jobTypes=[{label:'Work',id:1},{label:'Personal',id:2}];// sticky edit card\nfunction ElevationScroll(_ref){var children=_ref.children,window=_ref.window;var trigger=useScrollTrigger({disableHysteresis:true,threshold:130,target:window||undefined});return/*#__PURE__*/cloneElement(children,{style:{position:trigger?'fixed':'relative',top:trigger?83:0,width:trigger?318:'100%'}});}// ==============================|| CONTACT CARD/LIST USER EDIT ||============================== //\nvar UserEdit=function UserEdit(_ref2){var user=_ref2.user,onCancel=_ref2.onCancel,onSave=_ref2.onSave,others=_objectWithoutProperties(_ref2,_excluded);var theme=useTheme();// save user to local state to update details and submit letter\nvar _useState=useState(user),_useState2=_slicedToArray(_useState,2),profile=_useState2[0],setProfile=_useState2[1];useEffect(function(){setProfile(user);},[user]);var avatarProfile=User1;if(profile){avatarProfile=profile.avatar&&avatarImage(\"./\".concat(profile.avatar)).default;}return/*#__PURE__*/_jsx(ElevationScroll,_objectSpread(_objectSpread({},others),{},{children:/*#__PURE__*/_jsx(SubCard,{sx:{background:theme.palette.mode==='dark'?theme.palette.dark.main:theme.palette.grey[50],width:'100%',maxWidth:342},content:false,children:/*#__PURE__*/_jsx(PerfectScrollbar,{style:{height:'calc(100vh - 83px)',overflowX:'hidden'},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:gridSpacing,sx:{p:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Avatar,{alt:\"User 3\",src:avatarProfile,sx:{width:64,height:64}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:true,zeroMinWidth:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"containedButtonFile\",children:[/*#__PURE__*/_jsx(\"input\",{accept:\"image/*\",style:{opacity:0,position:'fixed',zIndex:1,padding:0.5,cursor:'pointer'},id:\"containedButtonFile\",multiple:true,type:\"file\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",startIcon:/*#__PURE__*/_jsx(UploadTwoToneIcon,{}),children:\"Upload\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"Image size should be 125kb Max.\"})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){return onCancel(profile);},size:\"large\",children:/*#__PURE__*/_jsx(HighlightOffTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Divider,{})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Name\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:profile.name,onChange:function onChange(e){return setProfile(_objectSpread(_objectSpread({},profile),{},{name:e.target.value}));},type:\"text\",label:\"Name\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(BusinessTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Company\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:profile.company,onChange:function onChange(e){return setProfile(_objectSpread(_objectSpread({},profile),{},{company:e.target.value}));},type:\"text\",label:\"Company\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(BusinessTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Job Title\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:profile.role,onChange:function onChange(e){return setProfile(_objectSpread(_objectSpread({},profile),{},{role:e.target.value}));},type:\"text\",label:\"Job Title\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(WorkTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,options:jobTypes,getOptionLabel:function getOptionLabel(option){return option.label;},defaultValue:[jobTypes[0]],renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread({},params));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Email\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:profile.work_email,onChange:function onChange(e){return setProfile(_objectSpread(_objectSpread({},profile),{},{work_email:e.target.value}));},type:\"text\",label:\"Email\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(MailTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,options:jobTypes,getOptionLabel:function getOptionLabel(option){return option.label;},defaultValue:[jobTypes[1]],renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread({},params));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Email\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:profile.personal_email,onChange:function onChange(e){return setProfile(_objectSpread(_objectSpread({},profile),{},{personal_email:e.target.value}));},type:\"text\",label:\"Email\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(MailTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"text\",startIcon:/*#__PURE__*/_jsx(ControlPointIcon,{}),children:\"Add New Email\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,options:jobTypes,getOptionLabel:function getOptionLabel(option){return option.label;},defaultValue:[jobTypes[0]],renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread({},params));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Phone Number\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:profile.work_phone,onChange:function onChange(e){setProfile(_objectSpread(_objectSpread({},profile),{},{work_phone:e.target.value}));},type:\"text\",label:\"Phone Number\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(CallTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,options:jobTypes,getOptionLabel:function getOptionLabel(option){return option.label;},defaultValue:[jobTypes[1]],renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread({},params));}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Phone Number\"}),/*#__PURE__*/_jsx(OutlinedInput,{value:profile.personal_phone,onChange:function onChange(e){setProfile(_objectSpread(_objectSpread({},profile),{},{personal_phone:e.target.value}));},type:\"text\",label:\"Phone Number\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(CallTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"text\",startIcon:/*#__PURE__*/_jsx(ControlPointIcon,{}),children:\"Add New Phone\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Birthday\"}),/*#__PURE__*/_jsx(OutlinedInput,{defaultValue:\"November 30, 1997\",type:\"text\",label:\"Birthday\",endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(TodayTwoToneIcon,{})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Bio\"}),/*#__PURE__*/_jsx(OutlinedInput,{defaultValue:profile.birthdayText,onChange:function onChange(e){return setProfile(_objectSpread(_objectSpread({},profile),{},{birthdayText:e.target.value}));},type:\"text\",label:\"Bio\",multiline:true,rows:3})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,onClick:function onClick(){return onSave(profile);},children:\"Save\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",fullWidth:true,onClick:function onClick(){return onCancel(profile);},children:\"Cancel\"})})]})})]})})})}));};export default UserEdit;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/contact/UserEdit.js"],"names":["cloneElement","useEffect","useState","useTheme","Autocomplete","Avatar","Button","Divider","FormControl","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","TextField","Typography","useScrollTrigger","PerfectScrollbar","SubCard","gridSpacing","User1","HighlightOffTwoToneIcon","BusinessTwoToneIcon","WorkTwoToneIcon","MailTwoToneIcon","CallTwoToneIcon","UploadTwoToneIcon","ControlPointIcon","TodayTwoToneIcon","avatarImage","require","context","jobTypes","label","id","ElevationScroll","children","window","trigger","disableHysteresis","threshold","target","undefined","style","position","top","width","UserEdit","user","onCancel","onSave","others","theme","profile","setProfile","avatarProfile","avatar","default","background","palette","mode","dark","main","grey","maxWidth","height","overflowX","p","opacity","zIndex","padding","cursor","name","e","value","company","role","option","params","work_email","personal_email","work_phone","personal_phone","birthdayText"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { cloneElement, useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Autocomplete,\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useScrollTrigger\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport User1 from 'assets/images/users/avatar-1.png';\r\n\r\n// assets\r\nimport HighlightOffTwoToneIcon from '@mui/icons-material/HighlightOffTwoTone';\r\nimport BusinessTwoToneIcon from '@mui/icons-material/BusinessTwoTone';\r\nimport WorkTwoToneIcon from '@mui/icons-material/WorkTwoTone';\r\nimport MailTwoToneIcon from '@mui/icons-material/MailTwoTone';\r\nimport CallTwoToneIcon from '@mui/icons-material/CallTwoTone';\r\nimport UploadTwoToneIcon from '@mui/icons-material/UploadTwoTone';\r\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\r\nimport TodayTwoToneIcon from '@mui/icons-material/TodayTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/users', true);\r\n\r\nconst jobTypes = [\r\n    { label: 'Work', id: 1 },\r\n    { label: 'Personal', id: 2 }\r\n];\r\n\r\n// sticky edit card\r\n\r\nfunction ElevationScroll({ children, window }) {\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 130,\r\n        target: window || undefined\r\n    });\r\n\r\n    return cloneElement(children, {\r\n        style: {\r\n            position: trigger ? 'fixed' : 'relative',\r\n            top: trigger ? 83 : 0,\r\n            width: trigger ? 318 : '100%'\r\n        }\r\n    });\r\n}\r\n\r\n// ==============================|| CONTACT CARD/LIST USER EDIT ||============================== //\r\n\r\nconst UserEdit = ({ user, onCancel, onSave, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    // save user to local state to update details and submit letter\r\n    const [profile, setProfile] = useState(user);\r\n    useEffect(() => {\r\n        setProfile(user);\r\n    }, [user]);\r\n\r\n    let avatarProfile = User1;\r\n    if (profile) {\r\n        avatarProfile = profile.avatar && avatarImage(`./${profile.avatar}`).default;\r\n    }\r\n\r\n    return (\r\n        <ElevationScroll {...others}>\r\n            <SubCard\r\n                sx={{\r\n                    background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                    width: '100%',\r\n                    maxWidth: 342\r\n                }}\r\n                content={false}\r\n            >\r\n                <PerfectScrollbar style={{ height: 'calc(100vh - 83px)', overflowX: 'hidden' }}>\r\n                    <Grid container spacing={gridSpacing} sx={{ p: 3 }}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Avatar alt=\"User 3\" src={avatarProfile} sx={{ width: 64, height: 64 }} />\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item xs={12}>\r\n                                            <label htmlFor=\"containedButtonFile\">\r\n                                                <input\r\n                                                    accept=\"image/*\"\r\n                                                    style={{\r\n                                                        opacity: 0,\r\n                                                        position: 'fixed',\r\n                                                        zIndex: 1,\r\n                                                        padding: 0.5,\r\n                                                        cursor: 'pointer'\r\n                                                    }}\r\n                                                    id=\"containedButtonFile\"\r\n                                                    multiple\r\n                                                    type=\"file\"\r\n                                                />\r\n                                                <Button variant=\"outlined\" size=\"small\" startIcon={<UploadTwoToneIcon />}>\r\n                                                    Upload\r\n                                                </Button>\r\n                                            </label>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography variant=\"caption\">Image size should be 125kb Max.</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => onCancel(profile)} size=\"large\">\r\n                                        <HighlightOffTwoToneIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Name</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.name}\r\n                                    onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Name\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <BusinessTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Company</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.company}\r\n                                    onChange={(e) => setProfile({ ...profile, company: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Company\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <BusinessTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Job Title</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.role}\r\n                                    onChange={(e) => setProfile({ ...profile, role: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Job Title\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <WorkTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[0]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Email</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.work_email}\r\n                                    onChange={(e) => setProfile({ ...profile, work_email: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Email\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <MailTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[1]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Email</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.personal_email}\r\n                                    onChange={(e) => setProfile({ ...profile, personal_email: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Email\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <MailTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"text\" startIcon={<ControlPointIcon />}>\r\n                                Add New Email\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[0]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Phone Number</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.work_phone}\r\n                                    onChange={(e) => {\r\n                                        setProfile({ ...profile, work_phone: e.target.value });\r\n                                    }}\r\n                                    type=\"text\"\r\n                                    label=\"Phone Number\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <CallTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                options={jobTypes}\r\n                                getOptionLabel={(option) => option.label}\r\n                                defaultValue={[jobTypes[1]]}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Phone Number</InputLabel>\r\n                                <OutlinedInput\r\n                                    value={profile.personal_phone}\r\n                                    onChange={(e) => {\r\n                                        setProfile({ ...profile, personal_phone: e.target.value });\r\n                                    }}\r\n                                    type=\"text\"\r\n                                    label=\"Phone Number\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <CallTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"text\" startIcon={<ControlPointIcon />}>\r\n                                Add New Phone\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Birthday</InputLabel>\r\n                                <OutlinedInput\r\n                                    defaultValue=\"November 30, 1997\"\r\n                                    type=\"text\"\r\n                                    label=\"Birthday\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <TodayTwoToneIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel>Bio</InputLabel>\r\n                                <OutlinedInput\r\n                                    defaultValue={profile.birthdayText}\r\n                                    onChange={(e) => setProfile({ ...profile, birthdayText: e.target.value })}\r\n                                    type=\"text\"\r\n                                    label=\"Bio\"\r\n                                    multiline\r\n                                    rows={3}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={6}>\r\n                                    <Button variant=\"contained\" fullWidth onClick={() => onSave(profile)}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Button variant=\"outlined\" fullWidth onClick={() => onCancel(profile)}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </PerfectScrollbar>\r\n            </SubCard>\r\n        </ElevationScroll>\r\n    );\r\n};\r\n\r\nUserEdit.propTypes = {\r\n    user: PropTypes.object,\r\n    onCancel: PropTypes.func,\r\n    onSave: PropTypes.func\r\n};\r\n\r\nexport default UserEdit;\r\n"]},"metadata":{},"sourceType":"module"}