{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{useDispatch}from'react-redux';// material-ui\nimport{Button,Grid,TextField,Stack,useTheme}from'@mui/material';// third-party\nimport{Chance}from'chance';// project imports\nimport MainCard from'ui-component/cards/MainCard';import SubCard from'ui-component/cards/SubCard';import{SNACKBAR_OPEN,ADD_COLUMN}from'store/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var chance=new Chance();// ==============================|| KANBAN BOARD - ADD COLUMN ||============================== //\nvar AddColumn=function AddColumn(){var theme=useTheme();var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTitle=_useState4[0],setIsTitle=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAddColumn=_useState6[0],setIsAddColumn=_useState6[1];var handleAddColumnChange=function handleAddColumnChange(){setIsAddColumn(function(prev){return!prev;});};var addColumn=function addColumn(){if(title.length>0){var newColumn={id:\"\".concat(chance.integer({min:1000,max:9999})),title:title,itemIds:[]};dispatch({type:ADD_COLUMN,payload:{column:newColumn}});dispatch({type:SNACKBAR_OPEN,open:true,message:'Column Add successfully',variant:'alert',anchorOrigin:{vertical:'top',horizontal:'right'},alertSeverity:'success'});setIsAddColumn(function(prev){return!prev;});setTitle('');}else{setIsTitle(true);}};var handleAddColumn=function handleAddColumn(event){if(event.key==='Enter'||event.keyCode===13){addColumn();}};var handleColumnTitle=function handleColumnTitle(event){var newTitle=event.target.value;setTitle(newTitle);if(newTitle.length<=0){setIsTitle(true);}else{setIsTitle(false);}};return/*#__PURE__*/_jsx(MainCard,{sx:{minWidth:250,backgroundColor:theme.palette.primary.light,height:'100%'},contentSX:{p:1.5,'&:last-child':{pb:1.5}},children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:1,children:[isAddColumn&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(SubCard,{contentSX:{p:2,transition:'background-color 0.25s ease-out'},children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",spacing:0.5,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,placeholder:\"Add Column\",value:title,onChange:handleColumnTitle,sx:{mb:2,'& input':{bgcolor:'transparent',p:0,borderRadius:'0px'},'& fieldset':{display:'none'},'& .MuiFormHelperText-root':{ml:0},'& .MuiOutlinedInput-root':{bgcolor:'transparent'}},onKeyUp:handleAddColumn,helperText:isTitle?'Column title is required.':'',error:isTitle})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:true,zeroMinWidth:true}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,children:[/*#__PURE__*/_jsx(Button,{variant:\"text\",color:\"error\",sx:{width:'100%'},onClick:handleAddColumnChange,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:addColumn,size:\"small\",children:\"Add\"})]})})]})})}),!isAddColumn&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"text\",color:\"primary\",sx:{width:'100%'},onClick:handleAddColumnChange,children:\"Add Column\"})})]})});};export default AddColumn;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/kanban/Board/AddColumn.js"],"names":["useState","useDispatch","Button","Grid","TextField","Stack","useTheme","Chance","MainCard","SubCard","SNACKBAR_OPEN","ADD_COLUMN","chance","AddColumn","theme","dispatch","title","setTitle","isTitle","setIsTitle","isAddColumn","setIsAddColumn","handleAddColumnChange","prev","addColumn","length","newColumn","id","integer","min","max","itemIds","type","payload","column","open","message","variant","anchorOrigin","vertical","horizontal","alertSeverity","handleAddColumn","event","key","keyCode","handleColumnTitle","newTitle","target","value","minWidth","backgroundColor","palette","primary","light","height","p","pb","transition","mb","bgcolor","borderRadius","display","ml","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Grid, TextField, Stack, useTheme } from '@mui/material';\r\n\r\n// third-party\r\nimport { Chance } from 'chance';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { SNACKBAR_OPEN, ADD_COLUMN } from 'store/actions';\r\n\r\nconst chance = new Chance();\r\n\r\n// ==============================|| KANBAN BOARD - ADD COLUMN ||============================== //\r\n\r\nconst AddColumn = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [isTitle, setIsTitle] = useState(false);\r\n\r\n    const [isAddColumn, setIsAddColumn] = useState(false);\r\n    const handleAddColumnChange = () => {\r\n        setIsAddColumn((prev) => !prev);\r\n    };\r\n\r\n    const addColumn = () => {\r\n        if (title.length > 0) {\r\n            const newColumn = {\r\n                id: `${chance.integer({ min: 1000, max: 9999 })}`,\r\n                title,\r\n                itemIds: []\r\n            };\r\n\r\n            dispatch({\r\n                type: ADD_COLUMN,\r\n                payload: { column: newColumn }\r\n            });\r\n\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Column Add successfully',\r\n                variant: 'alert',\r\n                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                alertSeverity: 'success'\r\n            });\r\n            setIsAddColumn((prev) => !prev);\r\n            setTitle('');\r\n        } else {\r\n            setIsTitle(true);\r\n        }\r\n    };\r\n\r\n    const handleAddColumn = (event) => {\r\n        if (event.key === 'Enter' || event.keyCode === 13) {\r\n            addColumn();\r\n        }\r\n    };\r\n\r\n    const handleColumnTitle = (event) => {\r\n        const newTitle = event.target.value;\r\n        setTitle(newTitle);\r\n        if (newTitle.length <= 0) {\r\n            setIsTitle(true);\r\n        } else {\r\n            setIsTitle(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard\r\n            sx={{\r\n                minWidth: 250,\r\n                backgroundColor: theme.palette.primary.light,\r\n                height: '100%'\r\n            }}\r\n            contentSX={{ p: 1.5, '&:last-child': { pb: 1.5 } }}\r\n        >\r\n            <Grid container alignItems=\"center\" spacing={1}>\r\n                {isAddColumn && (\r\n                    <Grid item xs={12}>\r\n                        <SubCard contentSX={{ p: 2, transition: 'background-color 0.25s ease-out' }}>\r\n                            <Grid container alignItems=\"center\" spacing={0.5}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder=\"Add Column\"\r\n                                        value={title}\r\n                                        onChange={handleColumnTitle}\r\n                                        sx={{\r\n                                            mb: 2,\r\n                                            '& input': { bgcolor: 'transparent', p: 0, borderRadius: '0px' },\r\n                                            '& fieldset': { display: 'none' },\r\n                                            '& .MuiFormHelperText-root': {\r\n                                                ml: 0\r\n                                            },\r\n                                            '& .MuiOutlinedInput-root': {\r\n                                                bgcolor: 'transparent'\r\n                                            }\r\n                                        }}\r\n                                        onKeyUp={handleAddColumn}\r\n                                        helperText={isTitle ? 'Column title is required.' : ''}\r\n                                        error={isTitle}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth />\r\n                                <Grid item>\r\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                                        <Button variant=\"text\" color=\"error\" sx={{ width: '100%' }} onClick={handleAddColumnChange}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={addColumn} size=\"small\">\r\n                                            Add\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </SubCard>\r\n                    </Grid>\r\n                )}\r\n                {!isAddColumn && (\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"text\" color=\"primary\" sx={{ width: '100%' }} onClick={handleAddColumnChange}>\r\n                            Add Column\r\n                        </Button>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default AddColumn;\r\n"]},"metadata":{},"sourceType":"module"}