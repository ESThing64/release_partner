{"ast":null,"code":"import{useDispatch}from'react-redux';// material-ui\nimport{Button,Grid,Stack,TextField}from'@mui/material';// project imports\nimport MainCard from'ui-component/cards/MainCard';import AnimateButton from'ui-component/extended/AnimateButton';import SecondaryAction from'ui-component/cards/CardSecondaryAction';import{SNACKBAR_OPEN}from'store/actions';import{gridSpacing}from'store/constant';// third-party\nimport{useFormik}from'formik';import*as yup from'yup';// assets\nimport LinkIcon from'@mui/icons-material/Link';/**\r\n * 'Enter your email'\r\n * yup.string Expected 0 arguments, but got 1 */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validationSchema=yup.object({email:yup.string().email('Enter a valid email').required('Email is required'),password:yup.string().min(8,'Password should be of minimum 8 characters length').required('Password is required')});// ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\nvar LoginForms=function LoginForms(){var dispatch=useDispatch();var formik=useFormik({initialValues:{email:'',password:''},validationSchema:validationSchema,onSubmit:function onSubmit(){dispatch({type:SNACKBAR_OPEN,open:true,message:'Submit Success',variant:'alert',alertSeverity:'success'});}});return/*#__PURE__*/_jsx(MainCard,{title:\"On Submit\",secondary:/*#__PURE__*/_jsx(SecondaryAction,{icon:/*#__PURE__*/_jsx(LinkIcon,{fontSize:\"small\"}),link:\"https://formik.org/docs/examples/with-material-ui\"}),children:/*#__PURE__*/_jsx(\"form\",{onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"email\",name:\"email\",label:\"Email\",defaultValue:formik.values.email,onChange:formik.handleChange,error:formik.touched.email&&Boolean(formik.errors.email),helperText:formik.touched.email&&formik.errors.email})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"password\",name:\"password\",label:\"Password\",type:\"password\",defaultValue:formik.values.password,onChange:formik.handleChange,error:formik.touched.password&&Boolean(formik.errors.password),helperText:formik.touched.password&&formik.errors.password})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(AnimateButton,{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",type:\"submit\",children:\"Verify & Submit\"})})})})]})})});};export default LoginForms;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/forms/forms-validation/LoginForms.js"],"names":["useDispatch","Button","Grid","Stack","TextField","MainCard","AnimateButton","SecondaryAction","SNACKBAR_OPEN","gridSpacing","useFormik","yup","LinkIcon","validationSchema","object","email","string","required","password","min","LoginForms","dispatch","formik","initialValues","onSubmit","type","open","message","variant","alertSeverity","handleSubmit","values","handleChange","touched","Boolean","errors"],"mappings":"AAAA,OAASA,WAAT,KAA4B,aAA5B,CAEA;AACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,SAA9B,KAA+C,eAA/C,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,qCAA1B,CACA,MAAOC,CAAAA,eAAP,KAA4B,wCAA5B,CACA,OAASC,aAAT,KAA8B,eAA9B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CAEA;AACA,OAASC,SAAT,KAA0B,QAA1B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CAEA;AACA;AACA,gD,wFACA,GAAMC,CAAAA,gBAAgB,CAAGF,GAAG,CAACG,MAAJ,CAAW,CAChCC,KAAK,CAAEJ,GAAG,CAACK,MAAJ,GAAaD,KAAb,CAAmB,qBAAnB,EAA0CE,QAA1C,CAAmD,mBAAnD,CADyB,CAEhCC,QAAQ,CAAEP,GAAG,CAACK,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,CAAoB,mDAApB,EAAyEF,QAAzE,CAAkF,sBAAlF,CAFsB,CAAX,CAAzB,CAKA;AAEA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,QAAQ,CAAGrB,WAAW,EAA5B,CAEA,GAAMsB,CAAAA,MAAM,CAAGZ,SAAS,CAAC,CACrBa,aAAa,CAAE,CACXR,KAAK,CAAE,EADI,CAEXG,QAAQ,CAAE,EAFC,CADM,CAKrBL,gBAAgB,CAAhBA,gBALqB,CAMrBW,QAAQ,CAAE,mBAAM,CACZH,QAAQ,CAAC,CACLI,IAAI,CAAEjB,aADD,CAELkB,IAAI,CAAE,IAFD,CAGLC,OAAO,CAAE,gBAHJ,CAILC,OAAO,CAAE,OAJJ,CAKLC,aAAa,CAAE,SALV,CAAD,CAAR,CAOH,CAdoB,CAAD,CAAxB,CAiBA,mBACI,KAAC,QAAD,EACI,KAAK,CAAC,WADV,CAEI,SAAS,cAAE,KAAC,eAAD,EAAiB,IAAI,cAAE,KAAC,QAAD,EAAU,QAAQ,CAAC,OAAnB,EAAvB,CAAsD,IAAI,CAAC,mDAA3D,EAFf,uBAII,aAAM,QAAQ,CAAEP,MAAM,CAACQ,YAAvB,uBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAErB,WAAzB,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,KAAC,SAAD,EACI,SAAS,KADb,CAEI,EAAE,CAAC,OAFP,CAGI,IAAI,CAAC,OAHT,CAII,KAAK,CAAC,OAJV,CAKI,YAAY,CAAEa,MAAM,CAACS,MAAP,CAAchB,KALhC,CAMI,QAAQ,CAAEO,MAAM,CAACU,YANrB,CAOI,KAAK,CAAEV,MAAM,CAACW,OAAP,CAAelB,KAAf,EAAwBmB,OAAO,CAACZ,MAAM,CAACa,MAAP,CAAcpB,KAAf,CAP1C,CAQI,UAAU,CAAEO,MAAM,CAACW,OAAP,CAAelB,KAAf,EAAwBO,MAAM,CAACa,MAAP,CAAcpB,KARtD,EADJ,EADJ,cAaI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,KAAC,SAAD,EACI,SAAS,KADb,CAEI,EAAE,CAAC,UAFP,CAGI,IAAI,CAAC,UAHT,CAII,KAAK,CAAC,UAJV,CAKI,IAAI,CAAC,UALT,CAMI,YAAY,CAAEO,MAAM,CAACS,MAAP,CAAcb,QANhC,CAOI,QAAQ,CAAEI,MAAM,CAACU,YAPrB,CAQI,KAAK,CAAEV,MAAM,CAACW,OAAP,CAAef,QAAf,EAA2BgB,OAAO,CAACZ,MAAM,CAACa,MAAP,CAAcjB,QAAf,CAR7C,CASI,UAAU,CAAEI,MAAM,CAACW,OAAP,CAAef,QAAf,EAA2BI,MAAM,CAACa,MAAP,CAAcjB,QATzD,EADJ,EAbJ,cA0BI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,KAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,cAAc,CAAC,UAAtC,uBACI,KAAC,aAAD,wBACI,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,QAAjC,6BADJ,EADJ,EADJ,EA1BJ,GADJ,EAJJ,EADJ,CA6CH,CAjED,CAmEA,cAAeE,CAAAA,UAAf","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Grid, Stack, TextField } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n// assets\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\n/**\r\n * 'Enter your email'\r\n * yup.string Expected 0 arguments, but got 1 */\r\nconst validationSchema = yup.object({\r\n    email: yup.string().email('Enter a valid email').required('Email is required'),\r\n    password: yup.string().min(8, 'Password should be of minimum 8 characters length').required('Password is required')\r\n});\r\n\r\n// ==============================|| FORM VALIDATION - LOGIN FORMIK  ||============================== //\r\n\r\nconst LoginForms = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: () => {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"On Submit\"\r\n            secondary={<SecondaryAction icon={<LinkIcon fontSize=\"small\" />} link=\"https://formik.org/docs/examples/with-material-ui\" />}\r\n        >\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            defaultValue={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            defaultValue={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Verify & Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default LoginForms;\r\n"]},"metadata":{},"sourceType":"module"}