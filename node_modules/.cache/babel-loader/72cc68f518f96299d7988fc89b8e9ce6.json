{"ast":null,"code":"import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';// material-ui\nimport{Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow}from'@mui/material';// project imports\nimport MainCard from'ui-component/cards/MainCard';import SecondaryAction from'ui-component/cards/CardSecondaryAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{id:'name',label:'Name',minWidth:170},{id:'code',label:\"ISO\\xA0Code\",minWidth:100},{id:'population',label:'Population',minWidth:170,align:'right',format:function format(value){return value.toLocaleString('en-US');}},{id:'size',label:\"Size\\xA0(km\\xB2)\",minWidth:170,align:'right',format:function format(value){return value.toLocaleString('en-US');}},{id:'density',label:'Density',minWidth:170,align:'right',format:function format(value){return typeof value==='number'&&value.toFixed(2);}}];// table data\nfunction createData(name,code,population,size){var density=population/size;return{name:name,code:code,population:population,size:size,density:density};}var rows=[createData('India','IN',1324171354,3287263),createData('China','CN',1403500365,9596961),createData('Italy','IT',60483973,301340),createData('United States','US',327167434,9833520),createData('Canada','CA',37602103,9984670),createData('Australia','AU',25475400,7692024),createData('Germany','DE',83019200,357578),createData('Ireland','IE',4857000,70273),createData('Mexico','MX',126577691,1972550),createData('Japan','JP',126317000,377973),createData('France','FR',67022000,640679),createData('United Kingdom','GB',67545757,242495),createData('Russia','RU',146793744,17098246),createData('Nigeria','NG',200962417,923768),createData('Brazil','BR',210147125,8515767)];// ==============================|| TABLE - STICKY HEADER ||============================== //\nexport default function StickyHeadTable(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState(10),_useState4=_slicedToArray(_useState3,2),rowsPerPage=_useState4[0],setRowsPerPage=_useState4[1];var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){var _event$target;setRowsPerPage(+(event===null||event===void 0?void 0:(_event$target=event.target)===null||_event$target===void 0?void 0:_event$target.value));setPage(0);};return/*#__PURE__*/_jsxs(MainCard,{content:false,title:\"Sticky Header\",secondary:/*#__PURE__*/_jsx(SecondaryAction,{link:\"https://next.material-ui.com/components/tables/\"}),children:[/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:440},children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,\"aria-label\":\"sticky table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableRow,{children:columns.map(function(column){return/*#__PURE__*/_jsx(TableCell,{sx:{py:3},align:column.align,style:{minWidth:column.minWidth},children:column.label},column.id);})})}),/*#__PURE__*/_jsx(TableBody,{children:rows.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(row){return/*#__PURE__*/_jsx(TableRow,{sx:{py:3},hover:true,role:\"checkbox\",tabIndex:-1,children:columns.map(function(column){var value=row[column.id];return/*#__PURE__*/_jsx(TableCell,{align:column.align,children:column.format&&typeof value==='number'?column.format(value):value},column.id);})},row.code);})})]})}),/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[10,25,100],component:\"div\",count:rows.length,rowsPerPage:rowsPerPage,page:page,onPageChange:handleChangePage,onRowsPerPageChange:handleChangeRowsPerPage})]});}","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/forms/tables/TableStickyHead.js"],"names":["useState","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","MainCard","SecondaryAction","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","maxHeight","map","column","py","slice","row","length"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n    {\r\n        id: 'population',\r\n        label: 'Population',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US')\r\n    },\r\n    {\r\n        id: 'size',\r\n        label: 'Size\\u00a0(km\\u00b2)',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US')\r\n    },\r\n    {\r\n        id: 'density',\r\n        label: 'Density',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => typeof value === 'number' && value.toFixed(2)\r\n    }\r\n];\r\n\r\n// table data\r\nfunction createData(name, code, population, size) {\r\n    const density = population / size;\r\n    return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n    createData('India', 'IN', 1324171354, 3287263),\r\n    createData('China', 'CN', 1403500365, 9596961),\r\n    createData('Italy', 'IT', 60483973, 301340),\r\n    createData('United States', 'US', 327167434, 9833520),\r\n    createData('Canada', 'CA', 37602103, 9984670),\r\n    createData('Australia', 'AU', 25475400, 7692024),\r\n    createData('Germany', 'DE', 83019200, 357578),\r\n    createData('Ireland', 'IE', 4857000, 70273),\r\n    createData('Mexico', 'MX', 126577691, 1972550),\r\n    createData('Japan', 'JP', 126317000, 377973),\r\n    createData('France', 'FR', 67022000, 640679),\r\n    createData('United Kingdom', 'GB', 67545757, 242495),\r\n    createData('Russia', 'RU', 146793744, 17098246),\r\n    createData('Nigeria', 'NG', 200962417, 923768),\r\n    createData('Brazil', 'BR', 210147125, 8515767)\r\n];\r\n\r\n// ==============================|| TABLE - STICKY HEADER ||============================== //\r\n\r\nexport default function StickyHeadTable() {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event?.target?.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <MainCard\r\n            content={false}\r\n            title=\"Sticky Header\"\r\n            secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n        >\r\n            {/* table */}\r\n            <TableContainer sx={{ maxHeight: 440 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell sx={{ py: 3 }} key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                            <TableRow sx={{ py: 3 }} hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                {columns.map((column) => {\r\n                                    const value = row[column.id];\r\n                                    return (\r\n                                        <TableCell key={column.id} align={column.align}>\r\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                        </TableCell>\r\n                                    );\r\n                                })}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table pagination */}\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}