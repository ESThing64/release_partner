{"ast":null,"code":"import _objectSpread from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johncoakley/development/projects/release_partner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';// material-ui\nimport{Grid,InputAdornment,OutlinedInput,Typography}from'@mui/material';// project imports\nimport FriendRequestCard from'ui-component/cards/FriendRequestCard';import MainCard from'ui-component/cards/MainCard';import axios from'utils/axios';import{gridSpacing}from'store/constant';// assets\nimport{IconSearch}from'@tabler/icons';// ==============================|| SOCIAL PROFILE - FRIEND REQUEST ||============================== //\nimport{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FriendRequest=function FriendRequest(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),friendRequest=_useState2[0],setFriendRequest=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var getFriendRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/api/friend-request/list');case 2:response=_context.sent;setFriendRequest(response.data.friends);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getFriendRequest(){return _ref.apply(this,arguments);};}();var handleSearch=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var newString;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:newString=event===null||event===void 0?void 0:event.target.value;setSearch(newString);if(!newString){_context2.next=7;break;}_context2.next=5;return axios.post('/api/friend-request/filter',{key:newString}).then(function(response){setFriendRequest(response.data.results);});case 5:_context2.next=8;break;case 7:getFriendRequest();case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSearch(_x){return _ref2.apply(this,arguments);};}();useEffect(function(){getFriendRequest();},[]);var friendRequestResult=/*#__PURE__*/_jsx(_Fragment,{});if(friendRequest){friendRequestResult=friendRequest.map(function(friend,index){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,lg:3,children:/*#__PURE__*/_jsx(FriendRequestCard,_objectSpread({},friend))},index);});}return/*#__PURE__*/_jsx(MainCard,{title:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justifyContent:\"space-between\",spacing:gridSpacing,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h3\",children:\"Friend Request\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(OutlinedInput,{size:\"small\",id:\"input-search-user-profile\",placeholder:\"Search Friends\",value:search,onChange:handleSearch,startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(IconSearch,{stroke:1.5,size:\"1rem\"})})})})]}),children:/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",spacing:gridSpacing,children:friendRequestResult})});};export default FriendRequest;","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release_partner/src/views/application/users/social-profile/FriendRequest.js"],"names":["useState","useEffect","Grid","InputAdornment","OutlinedInput","Typography","FriendRequestCard","MainCard","axios","gridSpacing","IconSearch","FriendRequest","friendRequest","setFriendRequest","search","setSearch","getFriendRequest","get","response","data","friends","handleSearch","event","newString","target","value","post","key","then","results","friendRequestResult","map","friend","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport FriendRequestCard from 'ui-component/cards/FriendRequestCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\n\r\n// ==============================|| SOCIAL PROFILE - FRIEND REQUEST ||============================== //\r\n\r\nconst FriendRequest = () => {\r\n    const [friendRequest, setFriendRequest] = useState([]);\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const getFriendRequest = async () => {\r\n        const response = await axios.get('/api/friend-request/list');\r\n        setFriendRequest(response.data.friends);\r\n    };\r\n\r\n    const handleSearch = async (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString);\r\n\r\n        if (newString) {\r\n            await axios\r\n                .post('/api/friend-request/filter', {\r\n                    key: newString\r\n                })\r\n                .then((response) => {\r\n                    setFriendRequest(response.data.results);\r\n                });\r\n        } else {\r\n            getFriendRequest();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFriendRequest();\r\n    }, []);\r\n\r\n    let friendRequestResult = <></>;\r\n    if (friendRequest) {\r\n        friendRequestResult = friendRequest.map((friend, index) => (\r\n            <Grid key={index} item xs={12} sm={6} md={4} lg={3}>\r\n                <FriendRequestCard {...friend} />\r\n            </Grid>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <MainCard\r\n            title={\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">Friend Request</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <OutlinedInput\r\n                            size=\"small\"\r\n                            id=\"input-search-user-profile\"\r\n                            placeholder=\"Search Friends\"\r\n                            value={search}\r\n                            onChange={handleSearch}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        >\r\n            <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                {friendRequestResult}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default FriendRequest;\r\n"]},"metadata":{},"sourceType":"module"}